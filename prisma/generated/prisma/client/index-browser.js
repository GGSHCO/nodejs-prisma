
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.AcademyCartTableScalarFieldEnum = {
  lid: 'lid',
  courseName: 'courseName',
  image: 'image',
  amount: 'amount',
  totalAmount: 'totalAmount',
  addedTime: 'addedTime',
  activeUser: 'activeUser',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser'
};

exports.Prisma.AcademyCateoryTableScalarFieldEnum = {
  lid: 'lid',
  category: 'category',
  categoryHeading: 'categoryHeading',
  categoryDescription: 'categoryDescription',
  addedTime: 'addedTime',
  activeUser: 'activeUser',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser',
  status: 'status'
};

exports.Prisma.AcademyContactScalarFieldEnum = {
  lid: 'lid',
  userName: 'userName',
  email: 'email',
  phone: 'phone',
  message: 'message',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  subject: 'subject'
};

exports.Prisma.AcademyCounsellingScalarFieldEnum = {
  lid: 'lid',
  carrerName: 'carrerName',
  carrerAge: 'carrerAge',
  carrerEducation: 'carrerEducation',
  carrerEmail: 'carrerEmail',
  carrerMessage: 'carrerMessage',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  counsellorName: 'counsellorName',
  counsellorDepartment: 'counsellorDepartment'
};

exports.Prisma.AcademyCounsellorScalarFieldEnum = {
  lid: 'lid',
  counsellorName: 'counsellorName',
  counsellorDepartment: 'counsellorDepartment',
  counsellorEmail: 'counsellorEmail',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.AcademyEventScalarFieldEnum = {
  lid: 'lid',
  eventName: 'eventName',
  eventDate: 'eventDate',
  eventTime: 'eventTime',
  zoomLink: 'zoomLink',
  eventEndTime: 'eventEndTime',
  eventStatus: 'eventStatus',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  recordingLink: 'recordingLink'
};

exports.Prisma.AcademyTutorScalarFieldEnum = {
  lid: 'lid',
  tutorName: 'tutorName',
  tutorAge: 'tutorAge',
  tutorEducation: 'tutorEducation',
  tutorExperience: 'tutorExperience',
  tutorMessage: 'tutorMessage',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  tutorEmail: 'tutorEmail',
  tutorPhone: 'tutorPhone',
  tutorLocation: 'tutorLocation',
  jobPrefered: 'jobPrefered',
  linkedProfile: 'linkedProfile',
  tutorResume: 'tutorResume',
  joinReason: 'joinReason',
  availability: 'availability',
  workType: 'workType',
  tutorMail: 'tutorMail',
  tutorMobile: 'tutorMobile',
  tutorAddress: 'tutorAddress',
  tutorPreferedJob: 'tutorPreferedJob',
  tutorLinkedProfile: 'tutorLinkedProfile',
  tutorResumeUpload: 'tutorResumeUpload',
  tutorjoinReason: 'tutorjoinReason',
  tutorAvailability: 'tutorAvailability',
  tutorWorkType: 'tutorWorkType'
};

exports.Prisma.AcademyWishlistScalarFieldEnum = {
  lid: 'lid',
  courseName: 'courseName',
  image: 'image',
  amount: 'amount',
  addedTime: 'addedTime',
  activeUser: 'activeUser',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser'
};

exports.Prisma.AccountingPolicyScalarFieldEnum = {
  lid: 'lid',
  head: 'head',
  policy: 'policy',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.Adjustment_tbScalarFieldEnum = {
  lid: 'lid',
  adjEntry: 'adjEntry',
  clientName: 'clientName',
  rawCoa: 'rawCoa',
  debit: 'debit',
  credit: 'credit',
  remarks: 'remarks',
  net: 'net',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  finaNcialYear: 'finaNcialYear'
};

exports.Prisma.AllAppsScalarFieldEnum = {
  lid: 'lid',
  companyId: 'companyId',
  companyName: 'companyName',
  appName: 'appName',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.AllArgumentsScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  type: 'type',
  functionId: 'functionId',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.ALLBUGSScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  NAME: 'NAME',
  BUG: 'BUG',
  IMAGE: 'IMAGE',
  EMAIL: 'EMAIL',
  STATUS: 'STATUS',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.ALLCONTRACTS_FT_TESTScalarFieldEnum = {
  LID: 'LID',
  CLIENTNAME: 'CLIENTNAME',
  ENTITY: 'ENTITY',
  STATUS: 'STATUS',
  LIVECHURN: 'LIVECHURN',
  PROPOSALSTATUS: 'PROPOSALSTATUS',
  TERMSCONDITIONS: 'TERMSCONDITIONS',
  REMARKS: 'REMARKS',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  userid: 'userid',
  contractstartdate: 'contractstartdate',
  contractenddate: 'contractenddate'
};

exports.Prisma.AllDepartmentsScalarFieldEnum = {
  lid: 'lid',
  departmentName: 'departmentName',
  departmentHead: 'departmentHead',
  addedUser: 'addedUser',
  modifiedUser: 'modifiedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.AllDimensionsScalarFieldEnum = {
  lid: 'lid',
  userID: 'userID',
  userName: 'userName',
  companyID: 'companyID',
  companyName: 'companyName',
  dimension1: 'dimension1',
  dimension2: 'dimension2',
  dimension3: 'dimension3',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.AllEmployeesScalarFieldEnum = {
  EmployeeCode: 'EmployeeCode',
  EmployeeName: 'EmployeeName',
  Department: 'Department',
  Designation: 'Designation',
  email: 'email'
};

exports.Prisma.AllFieldsScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  columnName: 'columnName',
  columnType: 'columnType',
  tableDropdown: 'tableDropdown',
  tableName: 'tableName',
  buttonName: 'buttonName',
  hideColumn: 'hideColumn',
  defaultValue: 'defaultValue',
  disableColumn: 'disableColumn',
  properties: 'properties',
  displayName: 'displayName'
};

exports.Prisma.AllFilesScalarFieldEnum = {
  clientName: 'clientName',
  proposal: 'proposal'
};

exports.Prisma.AllFormsScalarFieldEnum = {
  lid: 'lid',
  companyId: 'companyId',
  companyName: 'companyName',
  formName: 'formName',
  displayName: 'displayName',
  appId: 'appId',
  reportProperties: 'reportProperties',
  formProperties: 'formProperties',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.AllInvoicesScalarFieldEnum = {
  invoiceNumber: 'invoiceNumber',
  projectCode: 'projectCode',
  amount: 'amount',
  status: 'status',
  assignmentNature: 'assignmentNature',
  milestones: 'milestones',
  clientName: 'clientName',
  date: 'date',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  assignmentID: 'assignmentID',
  companyName: 'companyName',
  companyId: 'companyId',
  edoc: 'edoc',
  invoiceGroupStatus: 'invoiceGroupStatus',
  projectName: 'projectName',
  REMARKS: 'REMARKS',
  contractID: 'contractID'
};

exports.Prisma.AllLeavesScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  reason: 'reason',
  fromDate: 'fromDate',
  toDate: 'toDate',
  noOfDays: 'noOfDays',
  status: 'status',
  leaveManagementId: 'leaveManagementId',
  sampleTestId: 'sampleTestId'
};

exports.Prisma.AllModulesScalarFieldEnum = {
  lid: 'lid',
  moduleName: 'moduleName',
  tableName: 'tableName',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  icon: 'icon'
};

exports.Prisma.AllModuleTransactionsScalarFieldEnum = {
  lid: 'lid',
  moduleName: 'moduleName',
  tableName: 'tableName',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  mainTab: 'mainTab',
  subTab: 'subTab',
  maintabSeq: 'maintabSeq',
  subtagSeq: 'subtagSeq',
  query: 'query',
  moduleId: 'moduleId',
  pyFnName: 'pyFnName',
  section: 'section',
  sectionSeq: 'sectionSeq'
};

exports.Prisma.AllOptionsScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  module: 'module',
  options: 'options',
  subModule: 'subModule'
};

exports.Prisma.AllProjectsScalarFieldEnum = {
  ProjectCode: 'ProjectCode',
  ClientName: 'ClientName',
  AssignmentNature: 'AssignmentNature',
  ProjectDescription: 'ProjectDescription',
  Amount: 'Amount',
  status: 'status',
  quarter: 'quarter',
  contractStatus: 'contractStatus',
  PersonResponsible1: 'PersonResponsible1',
  PersonResponsible2: 'PersonResponsible2',
  PersonResponsible3: 'PersonResponsible3',
  managerResponsible: 'managerResponsible',
  date: 'date',
  assignmentID: 'assignmentID',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  companyName: 'companyName',
  companyId: 'companyId',
  edoc: 'edoc',
  duration: 'duration',
  zbId: 'zbId',
  partner: 'partner',
  REMARKS: 'REMARKS',
  contractID: 'contractID',
  relevantStartDate: 'relevantStartDate',
  relevantEndDate: 'relevantEndDate',
  relevantYear: 'relevantYear',
  assignmentNatureDisplay: 'assignmentNatureDisplay',
  completionDate: 'completionDate',
  liveOrCancelled: 'liveOrCancelled',
  projectStatus: 'projectStatus',
  completionStatus: 'completionStatus',
  billingStatus: 'billingStatus',
  projectRemarks: 'projectRemarks',
  planDate: 'planDate'
};

exports.Prisma.AllPythonFunctionsScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  url: 'url',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  frontEndHandle: 'frontEndHandle',
  type: 'type',
  localorcloud: 'localorcloud',
  category: 'category'
};

exports.Prisma.AllWorkflowsScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  tableName: 'tableName',
  fieldName: 'fieldName',
  event: 'event',
  formula: 'formula',
  type: 'type',
  functions: 'functions',
  workflowName: 'workflowName'
};

exports.Prisma.AppAssets_formScalarFieldEnum = {
  lid: 'lid',
  formName: 'formName',
  formDisplay: 'formDisplay',
  head: 'head',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.AppAssets_headScalarFieldEnum = {
  lid: 'lid',
  headName: 'headName',
  headDisplay: 'headDisplay',
  addedUser: 'addedUser',
  addedTime: 'addedTime'
};

exports.Prisma.AppAssets_reportScalarFieldEnum = {
  lid: 'lid',
  formID: 'formID',
  reportName: 'reportName',
  reportDisplay: 'reportDisplay',
  head: 'head',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.AppAssets_subHeadScalarFieldEnum = {
  lid: 'lid',
  headID: 'headID',
  subHeadName: 'subHeadName',
  subHeadDisplay: 'subHeadDisplay',
  head: 'head',
  addedUser: 'addedUser',
  addedTime: 'addedTime'
};

exports.Prisma.AR_CollectionsScalarFieldEnum = {
  lid: 'lid',
  entity: 'entity',
  clientName: 'clientName',
  dueDate: 'dueDate',
  collectedDate: 'collectedDate',
  amount: 'amount',
  addedUser: 'addedUser',
  addedTime: 'addedTime'
};

exports.Prisma.AR_ManualScalarFieldEnum = {
  lid: 'lid',
  entity: 'entity',
  invoice_id: 'invoice_id',
  zcrm_potential_id: 'zcrm_potential_id',
  customer_id: 'customer_id',
  zcrm_potential_name: 'zcrm_potential_name',
  customer_name: 'customer_name',
  company_name: 'company_name',
  status: 'status',
  invoice_number: 'invoice_number',
  reference_number: 'reference_number',
  date: 'date',
  due_date: 'due_date',
  due_days: 'due_days',
  email: 'email',
  type: 'type',
  project_name: 'project_name',
  billing_address: 'billing_address',
  shipping_address: 'shipping_address',
  country: 'country',
  phone: 'phone',
  created_by: 'created_by',
  total: 'total',
  balance: 'balance',
  payment_expected_date: 'payment_expected_date',
  custom_fields: 'custom_fields',
  custom_field_hash: 'custom_field_hash',
  cf_tag1: 'cf_tag1',
  cf_tag1_unformatted: 'cf_tag1_unformatted',
  salesperson_name: 'salesperson_name',
  shipping_charge: 'shipping_charge',
  adjustment: 'adjustment',
  created_time: 'created_time',
  last_modified_time: 'last_modified_time',
  updated_time: 'updated_time',
  is_viewed_by_client: 'is_viewed_by_client',
  has_attachment: 'has_attachment',
  client_viewed_time: 'client_viewed_time',
  is_viewed_in_mail: 'is_viewed_in_mail',
  is_emailed: 'is_emailed',
  mail_first_viewed_time: 'mail_first_viewed_time',
  mail_last_viewed_time: 'mail_last_viewed_time',
  color_code: 'color_code',
  current_sub_status_id: 'current_sub_status_id',
  current_sub_status: 'current_sub_status',
  currency_id: 'currency_id',
  schedule_time: 'schedule_time',
  currency_code: 'currency_code',
  currency_symbol: 'currency_symbol',
  is_pre_gst: 'is_pre_gst',
  template_type: 'template_type',
  no_of_copies: 'no_of_copies',
  show_no_of_copies: 'show_no_of_copies',
  invoice_url: 'invoice_url',
  transaction_type: 'transaction_type',
  hsn_or_sac: 'hsn_or_sac',
  reminders_sent: 'reminders_sent',
  last_reminder_sent_date: 'last_reminder_sent_date',
  last_payment_date: 'last_payment_date',
  template_id: 'template_id',
  documents: 'documents',
  salesperson_id: 'salesperson_id',
  write_off_amount: 'write_off_amount',
  exchange_rate: 'exchange_rate',
  cf_commission: 'cf_commission',
  cf_commission_unformatted: 'cf_commission_unformatted'
};

exports.Prisma.AR_ReminderSettingsScalarFieldEnum = {
  lid: 'lid',
  reminder: 'reminder',
  day: 'day',
  messageContent: 'messageContent',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.AssignmentNatureScalarFieldEnum = {
  assignmentNature: 'assignmentNature',
  statutoryAssignment: 'statutoryAssignment',
  relevantYearBlcok: 'relevantYearBlcok',
  spiralBoundNecessary: 'spiralBoundNecessary',
  geography: 'geography',
  department: 'department',
  subDepartment: 'subDepartment',
  standardPrice: 'standardPrice',
  type: 'type',
  assignmentFrequency: 'assignmentFrequency',
  isUDIN_applicable: 'isUDIN_applicable',
  ZCID: 'ZCID',
  multiplier: 'multiplier',
  lid: 'lid',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  classification: 'classification',
  checkpoints: 'checkpoints',
  companyName: 'companyName',
  companyId: 'companyId',
  deliverables: 'deliverables',
  scopeInclusions: 'scopeInclusions',
  scopeExclusions: 'scopeExclusions',
  timelines: 'timelines',
  timelineCount: 'timelineCount',
  timelineManualCount: 'timelineManualCount',
  presalesefforts: 'presalesefforts',
  termsConditions: 'termsConditions',
  productOwner: 'productOwner',
  standardPriceinputs: 'standardPriceinputs',
  standardHours: 'standardHours',
  isListing: 'isListing'
};

exports.Prisma.ATHMABILLSScalarFieldEnum = {
  LID: 'LID',
  BATCHNO: 'BATCHNO',
  ADDEDTIME: 'ADDEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  modifiedTime: 'modifiedTime',
  MODIFIEDUSER: 'MODIFIEDUSER',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  UHID: 'UHID',
  TOKENTIME: 'TOKENTIME',
  BILLDATE: 'BILLDATE',
  BILLTIME: 'BILLTIME',
  PATIENTNAME: 'PATIENTNAME',
  BILLNO: 'BILLNO',
  OPNO: 'OPNO',
  DOCTORCODE: 'DOCTORCODE',
  DOCTORCOUNSELLOR: 'DOCTORCOUNSELLOR',
  HEAD: 'HEAD',
  TEST: 'TEST',
  SUBTEST: 'SUBTEST',
  BILLAMOUNT: 'BILLAMOUNT',
  LINEAMOUNT: 'LINEAMOUNT',
  BILLEDBY: 'BILLEDBY',
  REFERREDBY: 'REFERREDBY',
  CONCESSION: 'CONCESSION',
  LINEITEMCONCESSIN: 'LINEITEMCONCESSIN',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  BILLTYPE: 'BILLTYPE'
};

exports.Prisma.ATHMASETTLEMENTScalarFieldEnum = {
  LID: 'LID',
  BATCHNO: 'BATCHNO',
  ADDEDTIME: 'ADDEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  modifiedTime: 'modifiedTime',
  MODIFIEDUSER: 'MODIFIEDUSER',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  UHID: 'UHID',
  TOKENTIME: 'TOKENTIME',
  BILLDATE: 'BILLDATE',
  BILLTIME: 'BILLTIME',
  PATIENTNAME: 'PATIENTNAME',
  BILLNO: 'BILLNO',
  OPNO: 'OPNO',
  DOCTORCODE: 'DOCTORCODE',
  DOCTORCOUNSELLOR: 'DOCTORCOUNSELLOR',
  BILLAMOUNT: 'BILLAMOUNT',
  BILLEDBY: 'BILLEDBY',
  REFERREDBY: 'REFERREDBY',
  CONCESSION: 'CONCESSION',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  SETTLEMENTMODE: 'SETTLEMENTMODE',
  AMOUNTPAID: 'AMOUNTPAID',
  SETTLEMENTTIME: 'SETTLEMENTTIME',
  BILLTYPE: 'BILLTYPE'
};

exports.Prisma.AuditDocsScalarFieldEnum = {
  lid: 'lid',
  clientGroup: 'clientGroup',
  clientName: 'clientName',
  year: 'year',
  document: 'document',
  documentName: 'documentName'
};

exports.Prisma.AuditorsInfoTableScalarFieldEnum = {
  lid: 'lid',
  companyID: 'companyID',
  companyName: 'companyName',
  signingAuditorName: 'signingAuditorName',
  firmName: 'firmName',
  auditorMemberNumber: 'auditorMemberNumber',
  firmRegNumber: 'firmRegNumber',
  firmAddress: 'firmAddress',
  firmWebsite: 'firmWebsite',
  firmPhoneNumber: 'firmPhoneNumber'
};

exports.Prisma.BankDetailsScalarFieldEnum = {
  lid: 'lid',
  companyId: 'companyId',
  companyName: 'companyName',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  type: 'type',
  ifscCode: 'ifscCode',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.BankMasterScalarFieldEnum = {
  lid: 'lid',
  bankName: 'bankName'
};

exports.Prisma.BankTransactionsScalarFieldEnum = {
  lid: 'lid',
  companyId: 'companyId',
  companyName: 'companyName',
  bankName: 'bankName',
  accountNumber: 'accountNumber',
  batchNo: 'batchNo',
  transactionDate: 'transactionDate',
  settlementDate: 'settlementDate',
  description: 'description',
  debit: 'debit',
  credit: 'credit',
  balance: 'balance',
  tag1: 'tag1',
  tag2: 'tag2',
  tag3: 'tag3',
  remarks: 'remarks',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.BaseTableScalarFieldEnum = {
  lid: 'lid',
  bspl: 'bspl',
  alie: 'alie',
  classification: 'classification',
  head: 'head',
  subHead: 'subHead',
  dc: 'dc',
  alieSeq: 'alieSeq',
  classificationSeq: 'classificationSeq',
  headSeq: 'headSeq',
  subHeadSeq: 'subHeadSeq',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.BotDesignsGlobalScalarFieldEnum = {
  lid: 'lid',
  bot: 'bot',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  syncFunctions: 'syncFunctions',
  category: 'category',
  subCategory: 'subCategory',
  botStructure: 'botStructure'
};

exports.Prisma.BotTransactionsScalarFieldEnum = {
  lid: 'lid',
  bot: 'bot',
  companyName: 'companyName',
  companyId: 'companyId',
  startDate: 'startDate',
  endDate: 'endDate',
  version: 'version',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  botStructure: 'botStructure'
};

exports.Prisma.BranchLocationScalarFieldEnum = {
  lid: 'lid',
  clientId: 'clientId',
  clientName: 'clientName',
  location: 'location',
  Head: 'Head',
  subHead: 'subHead',
  functionType: 'functionType',
  live: 'live',
  startDate: 'startDate',
  endDate: 'endDate'
};

exports.Prisma.BranchMasterScalarFieldEnum = {
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  BRANCHNAME: 'BRANCHNAME',
  lid: 'lid'
};

exports.Prisma.CalenderScalarFieldEnum = {
  lid: 'lid',
  date: 'date',
  monthNo: 'monthNo',
  base: 'base',
  prev: 'prev',
  next: 'next',
  fy: 'fy',
  fyQtr: 'fyQtr',
  cy: 'cy',
  cyQtr: 'cyQtr',
  month: 'month',
  day: 'day',
  weekDay: 'weekDay'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  CID: 'CID',
  CategoryName: 'CategoryName',
  Classification: 'Classification'
};

exports.Prisma.ChartReportScalarFieldEnum = {
  lid: 'lid',
  templateName: 'templateName',
  companyName: 'companyName',
  messageChat: 'messageChat',
  startYear: 'startYear',
  endYear: 'endYear',
  addedTime: 'addedTime',
  image: 'image',
  status: 'status'
};

exports.Prisma.Client_GroupScalarFieldEnum = {
  lid: 'lid',
  clientGroup: 'clientGroup',
  subGroup: 'subGroup',
  client: 'client',
  clientCode: 'clientCode',
  email: 'email',
  poc1: 'poc1',
  poc1Mobile: 'poc1Mobile',
  poc2: 'poc2',
  poc2Mobile: 'poc2Mobile',
  regularMails: 'regularMails',
  escalationMails: 'escalationMails',
  Address: 'Address',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.ClientGroupScalarFieldEnum = {
  lid: 'lid',
  keyPerson1: 'keyPerson1',
  keyPerson2: 'keyPerson2',
  ZCID: 'ZCID',
  groupName: 'groupName'
};

exports.Prisma.ClockTimerScalarFieldEnum = {
  lid: 'lid',
  clockIn: 'clockIn',
  clockOut: 'clockOut',
  duration: 'duration',
  addedUser: 'addedUser',
  modifiedUser: 'modifiedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  status: 'status'
};

exports.Prisma.Coa_definitionScalarFieldEnum = {
  LEDGER: 'LEDGER',
  GROUPEDUNDER: 'GROUPEDUNDER',
  PRIMARYTAG: 'PRIMARYTAG',
  SUPPLYTYPE: 'SUPPLYTYPE',
  GSTRCM: 'GSTRCM',
  COAGSTRATE: 'COAGSTRATE',
  CGSTSGSTIGST: 'CGSTSGSTIGST',
  GSTNAME: 'GSTNAME',
  BRANCH: 'BRANCH',
  lid: 'lid',
  zohocoa: 'zohocoa',
  zohodimension1: 'zohodimension1',
  zohodimension2: 'zohodimension2',
  zohodimension3: 'zohodimension3',
  zohodimension4: 'zohodimension4',
  MIG_OB: 'MIG_OB',
  MIG_DR_TRAN: 'MIG_DR_TRAN',
  MIG_CR_TRAN: 'MIG_CR_TRAN',
  MIG_CB: 'MIG_CB',
  ISTRANAVL: 'ISTRANAVL',
  PLBS: 'PLBS',
  gstin: 'gstin',
  zohocontact: 'zohocontact',
  zbid: 'zbid',
  inputsource: 'inputsource',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  coadescription: 'coadescription',
  dim3zbid: 'dim3zbid',
  dim4zbid: 'dim4zbid'
};

exports.Prisma.CommitmentsScalarFieldEnum = {
  lid: 'lid',
  companyName: 'companyName',
  companyId: 'companyId',
  location: 'location',
  branch: 'branch',
  frequency: 'frequency',
  expenseType: 'expenseType',
  subCategory: 'subCategory',
  rate: 'rate',
  quantity: 'quantity',
  annual: 'annual',
  perMonth: 'perMonth',
  accountedIn: 'accountedIn',
  remarks: 'remarks',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  Head: 'Head',
  subHead: 'subHead',
  functionType: 'functionType',
  live: 'live',
  startDate: 'startDate',
  endDate: 'endDate',
  description: 'description',
  ggshCoa: 'ggshCoa',
  classification: 'classification',
  alie: 'alie',
  alieSeq: 'alieSeq',
  classificationSeq: 'classificationSeq',
  headSeq: 'headSeq',
  subHeadSeq: 'subHeadSeq',
  dimension1: 'dimension1',
  dimension2: 'dimension2',
  dimension3: 'dimension3',
  partyName: 'partyName',
  valueRate: 'valueRate',
  fileUpload: 'fileUpload',
  personResponsible: 'personResponsible',
  timesaYear: 'timesaYear',
  Segment: 'Segment',
  status: 'status',
  natureOfExpense: 'natureOfExpense',
  commitmentNature: 'commitmentNature',
  owner: 'owner',
  RAWCOA: 'RAWCOA',
  financialYear: 'financialYear'
};

exports.Prisma.CompanyAcBkMasterScalarFieldEnum = {
  lid: 'lid',
  companyID: 'companyID',
  companyName: 'companyName',
  booksSoftware: 'booksSoftware',
  fromDate: 'fromDate',
  toDate: 'toDate',
  namePerSoftware: 'namePerSoftware',
  uniqueOrgID: 'uniqueOrgID',
  clientID: 'clientID',
  clientSecret: 'clientSecret',
  authToken: 'authToken',
  entityType: 'entityType',
  scope: 'scope',
  refreshToken: 'refreshToken',
  accessToken: 'accessToken',
  redirectURL: 'redirectURL',
  isZohoBGServiceEnabled: 'isZohoBGServiceEnabled',
  isActive: 'isActive',
  financialStartDate: 'financialStartDate',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.CompanyMasterScalarFieldEnum = {
  companyID: 'companyID',
  companyName: 'companyName',
  userID: 'userID',
  userName: 'userName',
  emailID: 'emailID',
  groupID: 'groupID',
  consolidationID: 'consolidationID',
  pan: 'pan',
  itLogin: 'itLogin',
  itPassword: 'itPassword',
  country: 'country',
  incorporationYear: 'incorporationYear',
  entityType: 'entityType',
  dateFormat: 'dateFormat',
  permanentAddress: 'permanentAddress',
  billingAddress: 'billingAddress',
  logo: 'logo',
  signature: 'signature',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  mobile: 'mobile',
  financialStartDate: 'financialStartDate',
  letterHead: 'letterHead',
  CINLLPIN: 'CINLLPIN'
};

exports.Prisma.CompanyReportMasterScalarFieldEnum = {
  lid: 'lid',
  template: 'template',
  templateName: 'templateName',
  companyName: 'companyName',
  startYear: 'startYear',
  endYear: 'endYear',
  letterHead: 'letterHead',
  address: 'address',
  UDIN: 'UDIN',
  directorsName: 'directorsName',
  shareHolders: 'shareHolders'
};

exports.Prisma.ContactMasterScalarFieldEnum = {
  lid: 'lid',
  entity: 'entity',
  source: 'source',
  name: 'name',
  groupName: 'groupName',
  subGroup: 'subGroup',
  poc1: 'poc1',
  poc1Mobile: 'poc1Mobile',
  poc1Mail: 'poc1Mail',
  poc2: 'poc2',
  poc2Mobile: 'poc2Mobile',
  poc2Mail: 'poc2Mail',
  poc3: 'poc3',
  poc3Mobile: 'poc3Mobile',
  poc3Mail: 'poc3Mail',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  companyid: 'companyid',
  companyname: 'companyname',
  type: 'type',
  ANNUALBUSINESSVOLUME: 'ANNUALBUSINESSVOLUME'
};

exports.Prisma.CONTRACTASSIGNMENTNATURE_FT_TESTScalarFieldEnum = {
  LID: 'LID',
  ASSIGNMENTNATURE: 'ASSIGNMENTNATURE',
  TYPE: 'TYPE',
  FREQUENCY: 'FREQUENCY',
  FEEESTIMATE: 'FEEESTIMATE',
  AMOUNT: 'AMOUNT',
  DATEFORMAT: 'DATEFORMAT',
  RELEVANTSTARTDATE: 'RELEVANTSTARTDATE',
  RELEVANTENDDATE: 'RELEVANTENDDATE',
  RELEVANTYEAR: 'RELEVANTYEAR',
  CONTRACTSTARTDATE: 'CONTRACTSTARTDATE',
  CONTRACTENDDATE: 'CONTRACTENDDATE',
  QUARTER: 'QUARTER',
  MANAGERRESPONSIBLE: 'MANAGERRESPONSIBLE',
  EDOC: 'EDOC',
  DYNAMICEDOC: 'DYNAMICEDOC',
  CLIENTNAME: 'CLIENTNAME',
  ENTITY: 'ENTITY',
  STATUS: 'STATUS',
  LIVECHURN: 'LIVECHURN',
  PROPOSALSTATUS: 'PROPOSALSTATUS',
  REMARKS: 'REMARKS',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  CONTRACTID: 'CONTRACTID',
  userid: 'userid',
  partner: 'partner'
};

exports.Prisma.CountryMasterScalarFieldEnum = {
  lid: 'lid',
  country: 'country',
  countryCode: 'countryCode',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.CourseMasterScalarFieldEnum = {
  lid: 'lid',
  coursename: 'coursename',
  coursecontent: 'coursecontent',
  category: 'category',
  summary: 'summary',
  courseDescription: 'courseDescription',
  courseAuthor: 'courseAuthor',
  image: 'image',
  video: 'video',
  amount: 'amount',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  videoThumbnail: 'videoThumbnail',
  ThumbnailVideo: 'ThumbnailVideo',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  previewVideo: 'previewVideo',
  pdfMaterial: 'pdfMaterial',
  status: 'status'
};

exports.Prisma.CourseVideoMasterScalarFieldEnum = {
  lid: 'lid',
  coursename: 'coursename',
  coursecontent: 'coursecontent',
  thumbnailVideo: 'thumbnailVideo',
  summary: 'summary',
  video: 'video',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser',
  status: 'status'
};

exports.Prisma.CreditcardScalarFieldEnum = {
  TRANDATE: 'TRANDATE',
  SETTLEMENTDATE: 'SETTLEMENTDATE',
  PARTICULARS: 'PARTICULARS',
  DESCRIPTION: 'DESCRIPTION',
  OPENINGBALANCE: 'OPENINGBALANCE',
  INCREASE: 'INCREASE',
  DECREASE: 'DECREASE',
  CLOSINGBALANCE: 'CLOSINGBALANCE',
  CLOSINGBALANCERECOMPUTED: 'CLOSINGBALANCERECOMPUTED',
  PARTYNAME: 'PARTYNAME',
  COA: 'COA',
  CONTACTNAME: 'CONTACTNAME',
  RECONAME: 'RECONAME',
  RECOID: 'RECOID',
  RECOSTATUS: 'RECOSTATUS',
  RECOTAG: 'RECOTAG',
  ZBID: 'ZBID',
  LID: 'LID',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDTIME: 'MODIFIEDTIME',
  DATASOURCE: 'DATASOURCE',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER',
  batchno: 'batchno',
  sno: 'sno',
  reference: 'reference',
  grossamount: 'grossamount',
  currency: 'currency',
  fcamount: 'fcamount',
  ded1: 'ded1',
  ded2: 'ded2',
  ded3: 'ded3',
  net: 'net',
  ISREDFLAG: 'ISREDFLAG',
  ISVALIDATED: 'ISVALIDATED',
  booksid: 'booksid'
};

exports.Prisma.DcrScalarFieldEnum = {
  convertDate: 'convertDate',
  bookingDate: 'bookingDate',
  trailId: 'trailId',
  costId: 'costId',
  currency: 'currency',
  pytCostBase: 'pytCostBase',
  bookingCostBase: 'bookingCostBase',
  settlementCostBase: 'settlementCostBase',
  pytCostInr: 'pytCostInr',
  bookingCostInr: 'bookingCostInr',
  settlementCostInr: 'settlementCostInr',
  pnr: 'pnr',
  departureDate: 'departureDate',
  arrivalDate: 'arrivalDate',
  recoid: 'recoid',
  companyId: 'companyId',
  companyName: 'companyName',
  lid: 'lid',
  pytExRate: 'pytExRate',
  bcExRate: 'bcExRate',
  scExRate: 'scExRate',
  recotag: 'recotag',
  recostatus: 'recostatus',
  booksid: 'booksid'
};

exports.Prisma.DefinitionsTableScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  tableId: 'tableId',
  tableName: 'tableName',
  workflowName: 'workflowName',
  definedData: 'definedData',
  jsonData: 'jsonData',
  FUNCTIONID: 'FUNCTIONID'
};

exports.Prisma.DocumentationScalarFieldEnum = {
  lid: 'lid',
  team: 'team',
  role: 'role',
  title: 'title',
  upload: 'upload',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  subCategory: 'subCategory'
};

exports.Prisma.DropdownMasterScalarFieldEnum = {
  lid: 'lid',
  dropdownName: 'dropdownName',
  options: 'options',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.DynamicTableScalarFieldEnum = {
  ID: 'ID',
  LastName: 'LastName',
  FirstName: 'FirstName',
  Age: 'Age'
};

exports.Prisma.EntriesScalarFieldEnum = {
  EID: 'EID',
  EntryName: 'EntryName',
  SCID: 'SCID',
  Total1: 'Total1',
  Total2: 'Total2'
};

exports.Prisma.ExcelDocumentsUploadScalarFieldEnum = {
  lid: 'lid',
  category: 'category',
  subCategory: 'subCategory',
  excelUpload: 'excelUpload'
};

exports.Prisma.ExtDocsMasterScalarFieldEnum = {
  tabs: 'tabs',
  tableName: 'tableName',
  fields: 'fields',
  LID: 'LID',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDTIME: 'MODIFIEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER'
};

exports.Prisma.ExtDocsSpecificScalarFieldEnum = {
  tabs: 'tabs',
  tabName: 'tabName',
  tableName: 'tableName',
  fields: 'fields',
  LID: 'LID',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDTIME: 'MODIFIEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER'
};

exports.Prisma.FaClassificationScalarFieldEnum = {
  lid: 'lid',
  classification: 'classification',
  subClassification: 'subClassification',
  lifeInYears: 'lifeInYears',
  scrapValue: 'scrapValue',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.FaRegScalarFieldEnum = {
  lid: 'lid',
  mainClassification: 'mainClassification',
  subClassification: 'subClassification',
  assetID: 'assetID',
  nameOfTheAsset: 'nameOfTheAsset',
  capitalisationDate: 'capitalisationDate',
  dateOfSale: 'dateOfSale',
  cost: 'cost',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  companyId: 'companyId',
  companyName: 'companyName'
};

exports.Prisma.FaRegisterScalarFieldEnum = {
  lid: 'lid',
  sno: 'sno',
  clientName: 'clientName',
  assetCategory: 'assetCategory',
  fsClassification: 'fsClassification',
  description: 'description',
  quantity: 'quantity',
  rawCoa: 'rawCoa',
  ggshCoa: 'ggshCoa',
  purchaseDate: 'purchaseDate',
  putToUseDate: 'putToUseDate',
  grossCost: 'grossCost',
  usefulLife: 'usefulLife',
  rateOfDepreciation: 'rateOfDepreciation',
  incometaxDepreciation: 'incometaxDepreciation',
  residualValueRate: 'residualValueRate',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.FinanceScalarFieldEnum = {
  lid: 'lid',
  financialTotal: 'financialTotal',
  Note: 'Note',
  previousYear: 'previousYear'
};

exports.Prisma.FinanceBSScalarFieldEnum = {
  lid: 'lid',
  allCategory: 'allCategory',
  Classification: 'Classification',
  Head: 'Head',
  SubHead: 'SubHead',
  Sequence: 'Sequence',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.Financial_templateMasterScalarFieldEnum = {
  tempId: 'tempId',
  templateName: 'templateName',
  userName: 'userName'
};

exports.Prisma.FinancialSheetScalarFieldEnum = {
  lid: 'lid',
  allCategory: 'allCategory',
  Classification: 'Classification',
  Head: 'Head',
  SubHead: 'SubHead',
  Sequence: 'Sequence',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  subPartition: 'subPartition',
  subCategory: 'subCategory',
  Total1: 'Total1',
  Total2: 'Total2'
};

exports.Prisma.FollowupLogScalarFieldEnum = {
  lid: 'lid',
  poc: 'poc',
  balance: 'balance',
  dateOfCompletion: 'dateOfCompletion',
  modeOfContact: 'modeOfContact',
  remarks: 'remarks',
  nextFollowup: 'nextFollowup',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.FormNameScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  name: 'name'
};

exports.Prisma.GgshCoaScalarFieldEnum = {
  coa: 'coa',
  alie: 'alie',
  bspl: 'bspl',
  classification: 'classification',
  head: 'head',
  subHead: 'subHead',
  dc: 'dc',
  alieSeq: 'alieSeq',
  classificatonSeq: 'classificatonSeq',
  headSeq: 'headSeq',
  subHeadSeq: 'subHeadSeq',
  misCoa: 'misCoa',
  country: 'country',
  entityType: 'entityType',
  lid: 'lid',
  companyName: 'companyName'
};

exports.Prisma.GLOBALFORMSScalarFieldEnum = {
  LID: 'LID',
  FORMNAME: 'FORMNAME',
  LINKNAME: 'LINKNAME',
  FORMJSON: 'FORMJSON',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.GlobalModulesScalarFieldEnum = {
  particulars: 'particulars',
  name: 'name',
  jsonData: 'jsonData',
  LID: 'LID',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDTIME: 'MODIFIEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER'
};

exports.Prisma.GlobalReportMasterScalarFieldEnum = {
  lid: 'lid',
  template: 'template',
  templateName: 'templateName',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  category: 'category',
  subcategory: 'subcategory',
  isMultiPerYear: 'isMultiPerYear',
  documentID: 'documentID',
  reportType: 'reportType',
  documentPath: 'documentPath',
  checkListName: 'checkListName'
};

exports.Prisma.GoalSettingScalarFieldEnum = {
  lid: 'lid',
  entity: 'entity',
  year: 'year',
  goal: 'goal',
  jan: 'jan',
  feb: 'feb',
  mar: 'mar',
  apr: 'apr',
  may: 'may',
  jun: 'jun',
  jul: 'jul',
  aug: 'aug',
  sep: 'sep',
  oct: 'oct',
  nov: 'nov',
  dec: 'dec',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  monthCode: 'monthCode'
};

exports.Prisma.GstinMasterScalarFieldEnum = {
  COMPANYNAME: 'COMPANYNAME',
  GSTIN: 'GSTIN',
  GSTUSERNAME: 'GSTUSERNAME',
  lid: 'lid',
  companyid: 'companyid',
  gstAccessToken: 'gstAccessToken',
  tokenSyncTime: 'tokenSyncTime'
};

exports.Prisma.Gstr1B2bScalarFieldEnum = {
  LID: 'LID',
  INVOICEVALUE: 'INVOICEVALUE',
  INVOICETYPE: 'INVOICETYPE',
  PLACEOFSUPPLY: 'PLACEOFSUPPLY',
  INVOICEDATE: 'INVOICEDATE',
  REVERSECHARGE: 'REVERSECHARGE',
  INVOICENUMBER: 'INVOICENUMBER',
  TAXABLEVALUE: 'TAXABLEVALUE',
  TAXAMT: 'TAXAMT',
  TAXRATE: 'TAXRATE',
  CESSAMT: 'CESSAMT',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  COGSTIN: 'COGSTIN',
  CUSTOMERGSTIN: 'CUSTOMERGSTIN',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  GSTRYEAR: 'GSTRYEAR',
  GSTRMONTH: 'GSTRMONTH',
  ORIGORAMEND: 'ORIGORAMEND',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.GSTR1B2CSScalarFieldEnum = {
  LID: 'LID',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  COGSTIN: 'COGSTIN',
  GSTRYEAR: 'GSTRYEAR',
  GSTRMONTH: 'GSTRMONTH',
  PLACEOFSUPPLY: 'PLACEOFSUPPLY',
  TAXABLEVALUE: 'TAXABLEVALUE',
  RATE: 'RATE',
  CGST: 'CGST',
  SGST: 'SGST',
  IGST: 'IGST',
  CESS: 'CESS',
  TAXAMT: 'TAXAMT',
  INVOICEVALUE: 'INVOICEVALUE',
  SUPPLYTYPE: 'SUPPLYTYPE',
  RETURNFORM: 'RETURNFORM',
  ADDEDUSER: 'ADDEDUSER',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.Gstr2bScalarFieldEnum = {
  LID: 'LID',
  INVDATE: 'INVDATE',
  INVVALUE: 'INVVALUE',
  INVNO: 'INVNO',
  TAXABLEVAL: 'TAXABLEVAL',
  RATE: 'RATE',
  SGST: 'SGST',
  CGST: 'CGST',
  IGST: 'IGST',
  SUPPLIERNAME: 'SUPPLIERNAME',
  DATEOFFILING: 'DATEOFFILING',
  SUPPLIERPERIOD: 'SUPPLIERPERIOD',
  GSTIN: 'GSTIN',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  GSTR2BYEAR: 'GSTR2BYEAR',
  GSTR2BMONTH: 'GSTR2BMONTH',
  SYNCDATETIME: 'SYNCDATETIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  COMPANYGSTIN: 'COMPANYGSTIN',
  invoicetype: 'invoicetype',
  placeofsupply: 'placeofsupply',
  revcharge: 'revcharge',
  itcavl: 'itcavl',
  reason: 'reason',
  source: 'source',
  irn: 'irn',
  irndate: 'irndate',
  RECOSTATUS: 'RECOSTATUS',
  recoid: 'recoid',
  RECOTAG: 'RECOTAG'
};

exports.Prisma.InterviewScalarFieldEnum = {
  lid: 'lid',
  candidateName: 'candidateName',
  mobileNumber: 'mobileNumber',
  email: 'email',
  status: 'status',
  position: 'position',
  location: 'location',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  companyid: 'companyid',
  companyname: 'companyname',
  userid: 'userid'
};

exports.Prisma.INVITEDUSERSScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  INVITEDUSERID: 'INVITEDUSERID',
  INVITEDUSEREMAIL: 'INVITEDUSEREMAIL',
  ROLE: 'ROLE',
  MODULES: 'MODULES',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  STATUS: 'STATUS'
};

exports.Prisma.Invoice_outstandingScalarFieldEnum = {
  lid: 'lid',
  company_name: 'company_name',
  customer_id: 'customer_id',
  invoice_number: 'invoice_number',
  invoice_id: 'invoice_id',
  invoice_url: 'invoice_url',
  date: 'date',
  due_date: 'due_date',
  total: 'total',
  balance: 'balance',
  entity: 'entity',
  upcomingDate: 'upcomingDate'
};

exports.Prisma.ItcLedgerScalarFieldEnum = {
  LID: 'LID',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  COMPANYGSTIN: 'COMPANYGSTIN',
  RETURNPERIOD: 'RETURNPERIOD',
  TRANDATE: 'TRANDATE',
  REFNO: 'REFNO',
  DESCRIPTION: 'DESCRIPTION',
  TRANTYPE: 'TRANTYPE',
  SGSTBAL: 'SGSTBAL',
  CGSTBAL: 'CGSTBAL',
  IGSTBAL: 'IGSTBAL',
  CESSBAL: 'CESSBAL',
  TOTALBAL: 'TOTALBAL',
  SGSTAMT: 'SGSTAMT',
  CGSTAMT: 'CGSTAMT',
  IGSTAMT: 'IGSTAMT',
  CESSAMT: 'CESSAMT',
  TOTALTRAMT: 'TOTALTRAMT',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  FROMDATE: 'FROMDATE',
  TODATE: 'TODATE',
  OB: 'OB',
  CB: 'CB'
};

exports.Prisma.JkScalarFieldEnum = {
  lid: 'lid',
  undefined: 'undefined'
};

exports.Prisma.LandingLoginScalarFieldEnum = {
  lid: 'lid',
  userName: 'userName',
  password: 'password',
  companyName: 'companyName',
  email: 'email',
  Mobile: 'Mobile',
  gstNumber: 'gstNumber',
  country: 'country',
  jobPosition: 'jobPosition',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  type: 'type',
  planType: 'planType',
  message: 'message'
};

exports.Prisma.LeadwfScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  leadId: 'leadId',
  mobileNumber: 'mobileNumber',
  email: 'email',
  leadSource: 'leadSource',
  leadStatus: 'leadStatus',
  leadOpenDays: 'leadOpenDays'
};

exports.Prisma.LeaveManagementScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  name: 'name',
  department: 'department'
};

exports.Prisma.LeaveRequestScalarFieldEnum = {
  lid: 'lid',
  companyname: 'companyname',
  companyid: 'companyid',
  userid: 'userid',
  requestDate: 'requestDate',
  leaveType: 'leaveType',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  fromDate: 'fromDate',
  toDate: 'toDate',
  reason: 'reason',
  workPlan: 'workPlan',
  approver: 'approver',
  copyTo: 'copyTo',
  rejectionReason: 'rejectionReason',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  status: 'status',
  requestor: 'requestor'
};

exports.Prisma.MailTemplatesScalarFieldEnum = {
  LID: 'LID',
  templatename: 'templatename',
  mailcontent: 'mailcontent',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  subject: 'subject'
};

exports.Prisma.MarksScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  subject: 'subject',
  marks: 'marks',
  year: 'year'
};

exports.Prisma.MilestonesScalarFieldEnum = {
  lid: 'lid',
  assignmentNature: 'assignmentNature',
  milestones: 'milestones',
  milestoneNumber: 'milestoneNumber',
  assignmentNatureID: 'assignmentNatureID',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  BUDGETEDHOURS: 'BUDGETEDHOURS',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.MILESTONESUBFORM_FT_TESTScalarFieldEnum = {
  LID: 'LID',
  ASSIGNMENTNATURE: 'ASSIGNMENTNATURE',
  SEQUENCE: 'SEQUENCE',
  MILESTONENUMBER: 'MILESTONENUMBER',
  MILESTONE: 'MILESTONE',
  PAYMENTPERCENT: 'PAYMENTPERCENT',
  AMOUNT: 'AMOUNT',
  ADVANCE: 'ADVANCE',
  COMPLETIONPERCENTAGE: 'COMPLETIONPERCENTAGE',
  STATUS: 'STATUS',
  STANDARDHOURS: 'STANDARDHOURS',
  ASSIGNMENTID: 'ASSIGNMENTID',
  CONTRACTID: 'CONTRACTID',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  userid: 'userid'
};

exports.Prisma.NewTestScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test: 'test'
};

exports.Prisma.NewTestDemoScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  employeeName: 'employeeName',
  employeeId: 'employeeId',
  department: 'department',
  dateOfJoining: 'dateOfJoining',
  salary: 'salary'
};

exports.Prisma.ObservationsScalarFieldEnum = {
  lid: 'lid',
  issue: 'issue',
  status: 'status',
  attachment: 'attachment',
  assigneeComment: 'assigneeComment',
  assignerComment: 'assignerComment',
  companyId: 'companyId',
  companyName: 'companyName',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.Pagebuilder_formScalarFieldEnum = {
  lid: 'lid',
  formName: 'formName',
  displayName: 'displayName',
  linkName: 'linkName',
  type: 'type'
};

exports.Prisma.PARENTFORMTEMPLATEScalarFieldEnum = {
  LID: 'LID',
  COMPANYNAME: 'COMPANYNAME',
  TOTALVALUE: 'TOTALVALUE',
  TRANSACTIONDATE: 'TRANSACTIONDATE',
  VENDORNAME: 'VENDORNAME',
  LOOKUP: 'LOOKUP',
  DROPDOWN: 'DROPDOWN',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  COMPANYID: 'COMPANYID',
  USERID: 'USERID',
  checkboxtest: 'checkboxtest',
  radiotest: 'radiotest'
};

exports.Prisma.PettyTaskScalarFieldEnum = {
  lid: 'lid',
  assigner: 'assigner',
  assignedTo: 'assignedTo',
  task: 'task',
  comment: 'comment',
  edoc: 'edoc',
  status: 'status',
  companyName: 'companyName',
  companyId: 'companyId',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  priority: 'priority',
  completedDate: 'completedDate',
  filesAttached: 'filesAttached'
};

exports.Prisma.PlanTableScalarFieldEnum = {
  planscheme: 'planscheme',
  Amount: 'Amount',
  Validity: 'Validity',
  Addedtime: 'Addedtime',
  Addeduser: 'Addeduser',
  userName: 'userName',
  userID: 'userID',
  modeofPayment: 'modeofPayment',
  paymentDate: 'paymentDate',
  expirationDate: 'expirationDate',
  timePeriod: 'timePeriod',
  lid: 'lid',
  emailID: 'emailID',
  status: 'status'
};

exports.Prisma.Proposal_editLogScalarFieldEnum = {
  lid: 'lid',
  edoc: 'edoc',
  amount: 'amount',
  contractId: 'contractId',
  assignmentNature: 'assignmentNature',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  isAmountSame: 'isAmountSame',
  isEdocSame: 'isEdocSame'
};

exports.Prisma.Proposal_templateTransactionsScalarFieldEnum = {
  lid: 'lid',
  template: 'template',
  chatHistory: 'chatHistory',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  contractID: 'contractID'
};

exports.Prisma.ProposalBlobScalarFieldEnum = {
  lid: 'lid',
  contractId: 'contractId',
  HTMLBlob: 'HTMLBlob',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.PytForexScalarFieldEnum = {
  LID: 'LID',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  DATE: 'DATE',
  DATA: 'DATA'
};

exports.Prisma.QuestionTemplateScalarFieldEnum = {
  lid: 'lid',
  Category: 'Category',
  Question: 'Question',
  Answer: 'Answer',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.QuestionTransactionScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  Category: 'Category',
  Question: 'Question',
  Answer: 'Answer',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.Raw_ContactMasterScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  entity: 'entity',
  source: 'source',
  groupName: 'groupName',
  subGroup: 'subGroup',
  addedUser: 'addedUser'
};

exports.Prisma.ReportsListScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  reportName: 'reportName',
  reportCategory: 'reportCategory',
  pyFunction: 'pyFunction'
};

exports.Prisma.RequirementsScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  description: 'description',
  attachment: 'attachment',
  comment: 'comment',
  addedUser: 'addedUser'
};

exports.Prisma.SampleScalarFieldEnum = {
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test1: 'test1',
  test2: 'test2',
  test3: 'test3',
  test4: 'test4',
  test5: 'test5',
  test6: 'test6',
  test7: 'test7',
  batchNo: 'batchNo',
  amount: 'amount',
  test123: 'test123',
  userid: 'userid',
  lid: 'lid'
};

exports.Prisma.Sample1ScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test: 'test',
  date: 'date',
  amount: 'amount',
  text: 'text'
};

exports.Prisma.ScheduleDemoScalarFieldEnum = {
  lid: 'lid',
  userName: 'userName',
  email: 'email',
  phone: 'phone',
  companyStrength: 'companyStrength',
  isIndia: 'isIndia',
  reference: 'reference',
  privacyNotice: 'privacyNotice',
  scheduleDate: 'scheduleDate',
  scheduleTime: 'scheduleTime'
};

exports.Prisma.SegmentMasterScalarFieldEnum = {
  lid: 'lid',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  companyName: 'companyName',
  companyId: 'companyId',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  segmentcriteria: 'segmentcriteria',
  segmentName: 'segmentName',
  personresponsible: 'personresponsible'
};

exports.Prisma.SepTestScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test: 'test',
  test1: 'test1',
  test2: 'test2',
  test3: 'test3',
  test4: 'test4',
  test5: 'test5',
  testttt: 'testttt',
  test7: 'test7'
};

exports.Prisma.SOPTableScalarFieldEnum = {
  LID: 'LID',
  HEAD: 'HEAD',
  HEADSEQUENCE: 'HEADSEQUENCE',
  SUBHEAD: 'SUBHEAD',
  SUBHEADSEQUENCE: 'SUBHEADSEQUENCE',
  CONTENTHEAD: 'CONTENTHEAD',
  CONTENTHEADSEQUENCE: 'CONTENTHEADSEQUENCE',
  CONTENT: 'CONTENT',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.SpecificMailTemplatesScalarFieldEnum = {
  LID: 'LID',
  templatename: 'templatename',
  mailcontent: 'mailcontent',
  companyname: 'companyname',
  companyid: 'companyid',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  subject: 'subject'
};

exports.Prisma.SpecificModulesScalarFieldEnum = {
  particulars: 'particulars',
  name: 'name',
  jsonData: 'jsonData',
  LID: 'LID',
  ADDEDTIME: 'ADDEDTIME',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  MODIFIEDTIME: 'MODIFIEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDUSER: 'MODIFIEDUSER'
};

exports.Prisma.SpeedDocumentsScalarFieldEnum = {
  lid: 'lid',
  userName: 'userName',
  companyName: 'companyName',
  templateName: 'templateName',
  template: 'template',
  startYear: 'startYear',
  endYear: 'endYear',
  type: 'type',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.SpeedDriveScalarFieldEnum = {
  lid: 'lid',
  userName: 'userName',
  filesSaved: 'filesSaved',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  year: 'year',
  type: 'type',
  companyName: 'companyName',
  role: 'role',
  userid: 'userid',
  companyid: 'companyid'
};

exports.Prisma.SqlTableMasterScalarFieldEnum = {
  lid: 'lid',
  tableName: 'tableName',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  category: 'category',
  tableDropdown: 'tableDropdown',
  buttonName: 'buttonName',
  displayName: 'displayName',
  parentTable: 'parentTable'
};

exports.Prisma.StagesScalarFieldEnum = {
  LID: 'LID',
  NAME: 'NAME',
  TEST: 'TEST',
  STAGE: 'STAGE',
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.StatutoryScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  statement: 'statement',
  date: 'date',
  amount: 'amount'
};

exports.Prisma.SubCategoriesScalarFieldEnum = {
  SCID: 'SCID',
  SubCategoryName: 'SubCategoryName',
  CID: 'CID'
};

exports.Prisma.SubEntriesScalarFieldEnum = {
  SEID: 'SEID',
  SubEntryName: 'SubEntryName',
  EID: 'EID',
  Total1: 'Total1',
  Total2: 'Total2'
};

exports.Prisma.SUBFORMTEMPLATE1ScalarFieldEnum = {
  LID: 'LID',
  DESCRIPTION: 'DESCRIPTION',
  QUANTITY: 'QUANTITY',
  DATE: 'DATE',
  LOOKUP1: 'LOOKUP1',
  DROPDOWN1: 'DROPDOWN1',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  PARENTID: 'PARENTID',
  COMPANYID: 'COMPANYID',
  userid: 'userid'
};

exports.Prisma.SUBFORMTEMPLATE2ScalarFieldEnum = {
  LID: 'LID',
  ITEMNAME: 'ITEMNAME',
  QUANTITY: 'QUANTITY',
  RATE: 'RATE',
  VALUE: 'VALUE',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  PARENTID: 'PARENTID',
  COMPANYID: 'COMPANYID',
  userid: 'userid'
};

exports.Prisma.SUBFORMTEMPLATE3ScalarFieldEnum = {
  LID: 'LID',
  ITEMNAME: 'ITEMNAME',
  QUANTITY: 'QUANTITY',
  RATE: 'RATE',
  VALUE: 'VALUE',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  PARENTID: 'PARENTID',
  COMPANYID: 'COMPANYID',
  userid: 'userid'
};

exports.Prisma.SubscriptionTableScalarFieldEnum = {
  lid: 'lid',
  email: 'email',
  plann: 'plann',
  course: 'course',
  courseStatus: 'courseStatus',
  amount: 'amount',
  status: 'status',
  addedTime: 'addedTime',
  activeUser: 'activeUser',
  courseProgress: 'courseProgress',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  addedUser: 'addedUser'
};

exports.Prisma.SYF_ALLOBSERVATIONSScalarFieldEnum = {
  LID: 'LID',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  MODULEID: 'MODULEID',
  MODULE: 'MODULE',
  CATEGORY: 'CATEGORY',
  COMMENT: 'COMMENT',
  PERSONRESPONSIBLE: 'PERSONRESPONSIBLE',
  STATUS: 'STATUS',
  EDOC: 'EDOC',
  ADDEDTIME: 'ADDEDTIME',
  ADDEDUSER: 'ADDEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  FINANCIALYEAR: 'FINANCIALYEAR'
};

exports.Prisma.SYF_BRANCHMASTERScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  COMPANYID: 'COMPANYID',
  BRANCH: 'BRANCH',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.SYF_COMPANYACBKMASTERScalarFieldEnum = {
  LID: 'LID',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  ENTITY: 'ENTITY',
  SOFTWARE: 'SOFTWARE',
  FROMDATE: 'FROMDATE',
  TODATE: 'TODATE',
  NAMEPERSOFTWARE: 'NAMEPERSOFTWARE',
  ORGANIZATIONID: 'ORGANIZATIONID',
  CLIENTID: 'CLIENTID',
  CLIENTSECRET: 'CLIENTSECRET',
  SCOPE: 'SCOPE',
  AUTHTOKEN: 'AUTHTOKEN',
  REFRESHTOKEN: 'REFRESHTOKEN',
  DOMAIN: 'DOMAIN',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  EMAIL: 'EMAIL',
  id: 'id'
};

exports.Prisma.SYF_COMPANYMASTERScalarFieldEnum = {
  USERID: 'USERID',
  USERNAME: 'USERNAME',
  EMAIL: 'EMAIL',
  COMPANYNAME: 'COMPANYNAME',
  ENTITY: 'ENTITY',
  COUNTRY: 'COUNTRY',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  PERMANENTADDRESS: 'PERMANENTADDRESS',
  BILLINGADDRESS: 'BILLINGADDRESS',
  LOGO: 'LOGO',
  PAN: 'PAN',
  FINANCIALSTARTMONTH: 'FINANCIALSTARTMONTH',
  STATUS: 'STATUS',
  DEFAULTLOAD: 'DEFAULTLOAD',
  COMPANYID: 'COMPANYID',
  CINLLPIN: 'CINLLPIN',
  DATEFORMAT: 'DATEFORMAT',
  lid: 'lid',
  SUBSCRIPTION: 'SUBSCRIPTION',
  GROUPID: 'GROUPID',
  GROUPNAME: 'GROUPNAME',
  VISION: 'VISION',
  MISSION: 'MISSION',
  COMPANYVALUES: 'COMPANYVALUES',
  FUNCTIONALGOALS: 'FUNCTIONALGOALS'
};

exports.Prisma.SYF_GLOBALTEMPLATESScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  CATEGORY: 'CATEGORY',
  SUBCATEGORY: 'SUBCATEGORY',
  NAME: 'NAME',
  HTMLTEMPLATE: 'HTMLTEMPLATE',
  SETTINGS: 'SETTINGS',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  STANDARDPATH: 'STANDARDPATH'
};

exports.Prisma.SYF_GSTMASTERScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  COMPANYID: 'COMPANYID',
  GSTIN: 'GSTIN',
  GSTUSERNAME: 'GSTUSERNAME',
  ACCESSTOKEN: 'ACCESSTOKEN',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  TOKENSYNCTIME: 'TOKENSYNCTIME'
};

exports.Prisma.SYF_LEADSScalarFieldEnum = {
  COMPANYNAME: 'COMPANYNAME',
  COMPANYID: 'COMPANYID',
  DATEOFREQUEST: 'DATEOFREQUEST',
  CLIENTTYPE: 'CLIENTTYPE',
  PARTNERTOHANDLE: 'PARTNERTOHANDLE',
  PROSPECTNAME: 'PROSPECTNAME',
  PRODUCTDESCRIPTION: 'PRODUCTDESCRIPTION',
  LEADSTATUS: 'LEADSTATUS',
  HEAT: 'HEAT',
  ESTIMATE: 'ESTIMATE',
  FINAL: 'FINAL',
  BRIGADEALLOCATED: 'BRIGADEALLOCATED',
  DATEOFPROPOSAL: 'DATEOFPROPOSAL',
  DATEOFREVISEDPROPOSAL: 'DATEOFREVISEDPROPOSAL',
  DATEOFCONFIRMATIONORREJECTION: 'DATEOFCONFIRMATIONORREJECTION',
  REMARKS: 'REMARKS',
  lid: 'lid',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime',
  addedtime: 'addedtime',
  userid: 'userid',
  assignmentType: 'assignmentType',
  contactName: 'contactName',
  leadCreatedBy: 'leadCreatedBy',
  allocatedTo: 'allocatedTo',
  phoneNumber: 'phoneNumber',
  email: 'email',
  leadSource: 'leadSource',
  referredBy: 'referredBy',
  industry: 'industry'
};

exports.Prisma.SYF_MODULEMASTERScalarFieldEnum = {
  LID: 'LID',
  CATEGORY: 'CATEGORY',
  SUBCATEGORY: 'SUBCATEGORY',
  NAME: 'NAME',
  MONTHLYPRICING: 'MONTHLYPRICING',
  ANNUALPRICING: 'ANNUALPRICING',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME',
  SOURCE: 'SOURCE'
};

exports.Prisma.SYF_PLANMASTERScalarFieldEnum = {
  LID: 'LID',
  NAME: 'NAME',
  MODULE: 'MODULE',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.Syf_recoScalarFieldEnum = {
  LID: 'LID',
  companyId: 'companyId',
  companyName: 'companyName',
  NAME: 'NAME',
  recoJson: 'recoJson',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.SYF_SPEEDDRIVEMASTERSScalarFieldEnum = {
  LID: 'LID',
  TEMPLATEID: 'TEMPLATEID',
  TEMPLATENAME: 'TEMPLATENAME',
  TEMPLATECATEGORY: 'TEMPLATECATEGORY',
  CATEGORYMANDATORY: 'CATEGORYMANDATORY',
  TYPE: 'TYPE',
  NATURE: 'NATURE',
  GROUPID: 'GROUPID',
  COMPANYID: 'COMPANYID',
  STANDARDPATH: 'STANDARDPATH',
  ISPATHEDITABLE: 'ISPATHEDITABLE',
  ISYEARSPECIFIC: 'ISYEARSPECIFIC',
  ASSIGNMENTNATURE: 'ASSIGNMENTNATURE',
  HTMLTEMPLATE: 'HTMLTEMPLATE',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.SYF_SPEEDMASTERSScalarFieldEnum = {
  LID: 'LID',
  TEMPLATEID: 'TEMPLATEID',
  TEMPLATENAME: 'TEMPLATENAME',
  TEMPLATECATEGORY: 'TEMPLATECATEGORY',
  CATEGORYMANDATORY: 'CATEGORYMANDATORY',
  TYPE: 'TYPE',
  NATURE: 'NATURE',
  GROUPID: 'GROUPID',
  COMPANYID: 'COMPANYID',
  STANDARDPATH: 'STANDARDPATH',
  ISPATHEDITABLE: 'ISPATHEDITABLE',
  ISYEARSPECIFIC: 'ISYEARSPECIFIC',
  ASSIGNMENTNATURE: 'ASSIGNMENTNATURE',
  HTMLTEMPLATE: 'HTMLTEMPLATE',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.SYF_TANMASTERScalarFieldEnum = {
  LID: 'LID',
  USERID: 'USERID',
  COMPANYID: 'COMPANYID',
  TANNO: 'TANNO',
  TANUSERNAME: 'TANUSERNAME',
  ADDEDUSER: 'ADDEDUSER',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDUSER: 'MODIFIEDUSER',
  MODIFIEDTIME: 'MODIFIEDTIME'
};

exports.Prisma.SYF_USERMASTERScalarFieldEnum = {
  LID: 'LID',
  EMAIL: 'EMAIL',
  NAME: 'NAME',
  PASSWORD: 'PASSWORD',
  COUNTRY: 'COUNTRY',
  PHONENUMBER: 'PHONENUMBER',
  SUBSCRIPTION: 'SUBSCRIPTION',
  ADDEDTIME: 'ADDEDTIME',
  MODIFIEDTIME: 'MODIFIEDTIME',
  STATUS: 'STATUS',
  PROFILEIMAGE: 'PROFILEIMAGE',
  ISTALLYSUBSCRIBED: 'ISTALLYSUBSCRIBED',
  ISZOHOSUBSCRIBED: 'ISZOHOSUBSCRIBED',
  ISWEBAPPSUBSCRIBED: 'ISWEBAPPSUBSCRIBED',
  TYPE: 'TYPE',
  FIRSTNAME: 'FIRSTNAME',
  LASTNAME: 'LASTNAME',
  DOB: 'DOB',
  GENDER: 'GENDER',
  MARITALSTATUS: 'MARITALSTATUS',
  resetToken: 'resetToken',
  tokenExpiration: 'tokenExpiration',
  SECRETQUESTIONS: 'SECRETQUESTIONS',
  SECRETANSWERS: 'SECRETANSWERS',
  ZBStatus: 'ZBStatus',
  salt: 'salt',
  failedLoginAttempts: 'failedLoginAttempts',
  lastFailedLogin: 'lastFailedLogin',
  lastLogin: 'lastLogin',
  emailVerificationToken: 'emailVerificationToken',
  verificationExpires: 'verificationExpires',
  encPassword: 'encPassword',
  accessToken: 'accessToken'
};

exports.Prisma.SysdiagramsScalarFieldEnum = {
  name: 'name',
  principal_id: 'principal_id',
  diagram_id: 'diagram_id',
  version: 'version',
  definition: 'definition'
};

exports.Prisma.TagMasterScalarFieldEnum = {
  lid: 'lid',
  tag: 'tag',
  tagGroup: 'tagGroup',
  type: 'type',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.TagsMasterScalarFieldEnum = {
  lid: 'lid',
  tag: 'tag',
  ref: 'ref',
  addedTime: 'addedTime',
  addedUser: 'addedUser'
};

exports.Prisma.Tally_vouchertype_pyScalarFieldEnum = {
  VOUCHERNAME: 'VOUCHERNAME',
  SYSTEMVOUCHERTYPE: 'SYSTEMVOUCHERTYPE',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  CONSIDERTRAN: 'CONSIDERTRAN',
  lid: 'lid',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME'
};

exports.Prisma.TanMasterScalarFieldEnum = {
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  TAN_NO: 'TAN_NO',
  TRACESUSERNAME: 'TRACESUSERNAME',
  lid: 'lid'
};

exports.Prisma.TbCoaMappingScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  startDate: 'startDate',
  endDate: 'endDate',
  fy: 'fy',
  rawCoa: 'rawCoa',
  ggshCoa: 'ggshCoa',
  classification: 'classification',
  head: 'head',
  subHead: 'subHead',
  alie: 'alie',
  bspl: 'bspl',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  alieSeq: 'alieSeq',
  classificatonSeq: 'classificatonSeq',
  headSeq: 'headSeq',
  subHeadSeq: 'subHeadSeq'
};

exports.Prisma.TBL_AH_OPBillMetadataScalarFieldEnum = {
  Bill_No_With_SerialNo_Date: 'Bill_No_With_SerialNo_Date',
  S_No: 'S_No',
  Reg_No_UHID: 'Reg_No_UHID',
  Token_No_Time: 'Token_No_Time',
  Bill_Time: 'Bill_Time',
  Patient_Name: 'Patient_Name',
  OP_NO: 'OP_NO',
  Doctor_code: 'Doctor_code',
  Dr_Name_Counsellor_Name: 'Dr_Name_Counsellor_Name',
  Referred_By: 'Referred_By',
  Bill_Amount: 'Bill_Amount',
  Concession: 'Concession',
  BD_Date_Time: 'BD_Date_Time',
  BD_Head_or_Type: 'BD_Head_or_Type',
  BD_Test: 'BD_Test',
  BD_Sub_Test: 'BD_Sub_Test',
  BD_Amount: 'BD_Amount',
  Settlements: 'Settlements'
};

exports.Prisma.TBL_AH_OPBillRangeOfDateScalarFieldEnum = {
  bill_date: 'bill_date',
  bill_start_no: 'bill_start_no',
  bill_end_no: 'bill_end_no'
};

exports.Prisma.Tbl_FAQ_AdminScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer',
  image_url: 'image_url',
  video_url: 'video_url',
  link_url: 'link_url'
};

exports.Prisma.Tbl_FAQ_AdmindataScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer',
  image_url: 'image_url',
  video_url: 'video_url',
  link_url: 'link_url'
};

exports.Prisma.Tbl_FAQ_MasterScalarFieldEnum = {
  ID: 'ID',
  Name: 'Name',
  Email: 'Email',
  Query: 'Query',
  Answers: 'Answers',
  Category: 'Category',
  ReferenceLinks: 'ReferenceLinks'
};

exports.Prisma.Tbl_tallyprime_LedgerMastersScalarFieldEnum = {
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  NAME: 'NAME',
  ADDRESS: 'ADDRESS',
  MAILINGNAME: 'MAILINGNAME',
  LEDGERPHONE: 'LEDGERPHONE',
  LEDGERCONTACT: 'LEDGERCONTACT',
  ISBILLWISEON: 'ISBILLWISEON',
  OPENINGBALANCE: 'OPENINGBALANCE',
  BILLALLOCATIONS: 'BILLALLOCATIONS',
  DeviceUUID: 'DeviceUUID',
  SOURCESYSTEM: 'SOURCESYSTEM',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  TALLYGUID: 'TALLYGUID',
  DBID: 'DBID',
  GSTIN: 'GSTIN',
  ggshCoa: 'ggshCoa',
  alie: 'alie',
  bspl: 'bspl',
  classification: 'classification',
  head: 'head',
  subHead: 'subHead',
  LEDGERGROUP: 'LEDGERGROUP',
  lid: 'lid',
  tallyGroup: 'tallyGroup',
  tallySubGroup: 'tallySubGroup',
  CLIENTNAMETALLYAPP: 'CLIENTNAMETALLYAPP',
  email: 'email',
  tallycompanyid: 'tallycompanyid',
  PARENTID: 'PARENTID'
};

exports.Prisma.Tbl_workflows_billsScalarFieldEnum = {
  lid: 'lid',
  companyname: 'companyname',
  companyid: 'companyid',
  userid: 'userid',
  po_number: 'po_number',
  supplier_name: 'supplier_name',
  bill_date: 'bill_date',
  due_date: 'due_date',
  amount: 'amount',
  tax_amount: 'tax_amount',
  invoice_number: 'invoice_number',
  payment_status: 'payment_status',
  net_amount: 'net_amount',
  remarks: 'remarks',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime',
  grn_number: 'grn_number'
};

exports.Prisma.Tbl_workflows_grnScalarFieldEnum = {
  lid: 'lid',
  companyname: 'companyname',
  companyid: 'companyid',
  userid: 'userid',
  po_number: 'po_number',
  supplier_name: 'supplier_name',
  receipt_date: 'receipt_date',
  status: 'status',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Tbl_workflows_grnitemsScalarFieldEnum = {
  lid: 'lid',
  companyname: 'companyname',
  companyid: 'companyid',
  userid: 'userid',
  grnnumber: 'grnnumber',
  item: 'item',
  quantity_received: 'quantity_received',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime',
  purchase_price: 'purchase_price',
  yet_to_receive: 'yet_to_receive',
  order_quantity: 'order_quantity'
};

exports.Prisma.Tbl_workflows_purchaseorderScalarFieldEnum = {
  lid: 'lid',
  supplier_name: 'supplier_name',
  supplier_email: 'supplier_email',
  order_date: 'order_date',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime',
  accepted_date: 'accepted_date',
  companyname: 'companyname',
  companyid: 'companyid',
  userid: 'userid',
  status: 'status'
};

exports.Prisma.Tbl_workflows_purchaseorderitemScalarFieldEnum = {
  lid: 'lid',
  companyname: 'companyname',
  item: 'item',
  quantity: 'quantity',
  price: 'price',
  total: 'total',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime',
  userid: 'userid',
  orderid: 'orderid',
  companyid: 'companyid',
  total_received: 'total_received'
};

exports.Prisma.Tbl_ZohoConnectorRegistrationsScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  clientCode: 'clientCode',
  userOrGroupEmailID: 'userOrGroupEmailID',
  clientID: 'clientID',
  clientSecret: 'clientSecret',
  scope: 'scope',
  refreshToken: 'refreshToken',
  accessToken: 'accessToken',
  redirectURL: 'redirectURL',
  isActive: 'isActive',
  isZohoBGServiceEnabled: 'isZohoBGServiceEnabled',
  autoSyncEnabled: 'autoSyncEnabled',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.TblUserDetailsScalarFieldEnum = {
  UserID: 'UserID',
  EmailID: 'EmailID',
  Role: 'Role',
  IsAdmin: 'IsAdmin',
  IsActiveUser: 'IsActiveUser',
  password: 'password',
  client: 'client',
  USERNAME: 'USERNAME',
  mobile: 'mobile',
  country: 'country',
  companyName: 'companyName',
  companyId: 'companyId',
  addedUser: 'addedUser',
  addedTime: 'addedTime'
};

exports.Prisma.TdsInvoicesScalarFieldEnum = {
  lid: 'lid',
  vendorName: 'vendorName',
  amount: 'amount',
  service: 'service',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  igstRate: 'igstRate',
  igstAmount: 'igstAmount',
  cgstRate: 'cgstRate',
  cgstAmount: 'cgstAmount',
  sgstRate: 'sgstRate',
  sgstAmount: 'sgstAmount',
  companyName: 'companyName',
  companyId: 'companyId',
  taxInvoiceNo: 'taxInvoiceNo',
  date: 'date',
  hsncode: 'hsncode',
  placeOfSupply: 'placeOfSupply',
  clientAddress: 'clientAddress',
  clientGstin: 'clientGstin'
};

exports.Prisma.TdsMasterScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  rate: 'rate',
  nature: 'nature',
  tdsSection: 'tdsSection',
  treshold: 'treshold',
  effStartDate: 'effStartDate',
  effEndDate: 'effEndDate',
  sectionExplanation: 'sectionExplanation',
  remarks: 'remarks',
  individualTransLimit: 'individualTransLimit'
};

exports.Prisma.TempScalarFieldEnum = {
  lid: 'lid',
  team: 'team',
  role: 'role',
  title: 'title',
  type: 'type',
  uploadurl: 'uploadurl',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  iframe: 'iframe',
  question: 'question',
  subCategory: 'subCategory'
};

exports.Prisma.TemplateBuilderScalarFieldEnum = {
  lid: 'lid',
  l1: 'l1',
  l2: 'l2',
  l3: 'l3',
  s1: 's1',
  s2: 's2',
  s3: 's3',
  tempId: 'tempId'
};

exports.Prisma.TemplateHeadingsScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  level: 'level',
  tempId: 'tempId'
};

exports.Prisma.TemplateListScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  templateName: 'templateName',
  template: 'template',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  category: 'category',
  tempFunction: 'tempFunction'
};

exports.Prisma.TemplateMasterScalarFieldEnum = {
  lid: 'lid',
  sequence: 'sequence',
  module: 'module',
  templateName: 'templateName',
  assignmentNature: 'assignmentNature',
  category: 'category',
  subCategory: 'subCategory',
  yearType: 'yearType',
  month: 'month',
  entity: 'entity',
  attchment: 'attchment',
  status: 'status',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  year: 'year'
};

exports.Prisma.TestScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname'
};

exports.Prisma.Test_2ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname'
};

exports.Prisma.Test1ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname'
};

exports.Prisma.Test12ScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  age: 'age'
};

exports.Prisma.Test2ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname'
};

exports.Prisma.Test3ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname'
};

exports.Prisma.Test4ScalarFieldEnum = {
  lid: 'lid'
};

exports.Prisma.Test5ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname',
  lname: 'lname'
};

exports.Prisma.Testing123ScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test1: 'test1',
  test2: 'test2'
};

exports.Prisma.Testing25ScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test1: 'test1',
  test2: 'test2',
  test3: 'test3'
};

exports.Prisma.TestJulyScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  sample: 'sample',
  sample2: 'sample2',
  test: 'test',
  test1: 'test1',
  checks: 'checks',
  checkField: 'checkField'
};

exports.Prisma.TestTableScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  item: 'item',
  amt: 'amt',
  test3: 'test3'
};

exports.Prisma.TrackGstReturnsScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  valid: 'valid',
  mof: 'mof',
  dof: 'dof',
  rtntype: 'rtntype',
  ret_prd: 'ret_prd',
  arn: 'arn',
  status: 'status',
  fy: 'fy'
};

exports.Prisma.TransactionQuestionScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  Category: 'Category',
  Question: 'Question',
  Answer: 'Answer',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.TransactionReportMasterScalarFieldEnum = {
  lid: 'lid',
  template: 'template',
  templateName: 'templateName',
  companyName: 'companyName',
  startYear: 'startYear',
  endYear: 'endYear',
  letterHead: 'letterHead',
  address: 'address',
  UDIN: 'UDIN',
  directorsName: 'directorsName',
  shareHoldersName: 'shareHoldersName',
  status: 'status',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  createdBy: 'createdBy',
  reviewerAssign: 'reviewerAssign',
  reviewStatus: 'reviewStatus',
  documentID: 'documentID',
  documentPath: 'documentPath'
};

exports.Prisma.TrialBalanceVersionScalarFieldEnum = {
  lid: 'lid',
  clientName: 'clientName',
  startDate: 'startDate',
  endDate: 'endDate',
  fy: 'fy',
  version: 'version',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.Trialtest24ScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  test1: 'test1',
  test2: 'test2',
  test3: 'test3'
};

exports.Prisma.TrialTestingScalarFieldEnum = {
  lid: 'lid',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  vendorName: 'vendorName',
  vendorTerms: 'vendorTerms',
  amount: 'amount',
  nature: 'nature',
  description: 'description',
  entryDate: 'entryDate',
  batchNo: 'batchNo'
};

exports.Prisma.Tzm_costCentersScalarFieldEnum = {
  lid: 'lid',
  costcentergroups: 'costcentergroups',
  costcenters: 'costcenters',
  addedUser: 'addedUser',
  modifiedUser: 'modifiedUser',
  addedTime: 'addedTime',
  modifiedTime: 'modifiedTime',
  companyname: 'companyname',
  companyid: 'companyid'
};

exports.Prisma.User_1ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname',
  lname: 'lname'
};

exports.Prisma.User_masterScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  age: 'age'
};

exports.Prisma.User1ScalarFieldEnum = {
  lid: 'lid',
  fname: 'fname',
  age: 'age',
  lname: 'lname',
  address: 'address'
};

exports.Prisma.UserBotMasterScalarFieldEnum = {
  lid: 'lid',
  userID: 'userID',
  userName: 'userName',
  emailID: 'emailID',
  bot: 'bot',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime'
};

exports.Prisma.UserDetailScalarFieldEnum = {
  lid: 'lid',
  name: 'name',
  email: 'email',
  dob: 'dob',
  age: 'age',
  gender: 'gender',
  password: 'password',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  activeUser: 'activeUser'
};

exports.Prisma.UserEntityMasterScalarFieldEnum = {
  userID: 'userID',
  emailID: 'emailID',
  userName: 'userName',
  companyID: 'companyID',
  companyName: 'companyName',
  role: 'role',
  client: 'client',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  gender: 'gender',
  profileImage: 'profileImage',
  department: 'department',
  lid: 'lid'
};

exports.Prisma.UserMasterScalarFieldEnum = {
  userID: 'userID',
  emailID: 'emailID',
  userName: 'userName',
  password: 'password',
  role: 'role',
  companyName: 'companyName',
  companyID: 'companyID',
  mobile: 'mobile',
  country: 'country',
  client: 'client',
  subscriptionPlan: 'subscriptionPlan',
  expiryDate: 'expiryDate',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  gender: 'gender',
  profileImage: 'profileImage',
  department: 'department',
  status: 'status'
};

exports.Prisma.VendorMasterTempScalarFieldEnum = {
  lid: 'lid',
  companyName: 'companyName',
  companyId: 'companyId',
  vendorName: 'vendorName',
  gstin: 'gstin',
  address: 'address',
  stateName: 'stateName',
  stateCode: 'stateCode',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  service: 'service'
};

exports.Prisma.VendorNatureMasterScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  vendorNature: 'vendorNature',
  vendorCategory: 'vendorCategory',
  tdsApplicability: 'tdsApplicability',
  tdsSection: 'tdsSection',
  isRcmNature: 'isRcmNature'
};

exports.Prisma.Window_verifiedEmailScalarFieldEnum = {
  lid: 'lid',
  email: 'email',
  expiry: 'expiry',
  status: 'status'
};

exports.Prisma.WorkflowsScalarFieldEnum = {
  lid: 'lid',
  companyId: 'companyId',
  companyName: 'companyName',
  appId: 'appId',
  formName: 'formName',
  workflowType: 'workflowType',
  properties: 'properties',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser'
};

exports.Prisma.ZohoAllVouchersScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  tranDate: 'tranDate',
  accountName: 'accountName',
  transactionDetails: 'transactionDetails',
  transactionId: 'transactionId',
  offsetAccountId: 'offsetAccountId',
  offsetAccountType: 'offsetAccountType',
  transactionType: 'transactionType',
  referenceNumber: 'referenceNumber',
  netAmount: 'netAmount',
  contactId: 'contactId',
  accountId: 'accountId',
  accountGroup: 'accountGroup',
  accountType: 'accountType',
  currencyCode: 'currencyCode'
};

exports.Prisma.ZohoBillsScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  BILLID: 'BILLID',
  VENDORID: 'VENDORID',
  VENDORNAME: 'VENDORNAME',
  BILLNUMBER: 'BILLNUMBER',
  REFNUMBER: 'REFNUMBER',
  DATE: 'DATE',
  CURRENCY: 'CURRENCY',
  TOTAL: 'TOTAL',
  DUEDATE: 'DUEDATE',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  tag: 'tag',
  lastmodified: 'lastmodified',
  childupdated: 'childupdated'
};

exports.Prisma.ZohoContactsScalarFieldEnum = {
  LID: 'LID',
  COMPANYID: 'COMPANYID',
  COMPANYNAME: 'COMPANYNAME',
  CONTACTID: 'CONTACTID',
  CONTACTNAME: 'CONTACTNAME',
  ENTITYNAME: 'ENTITYNAME',
  CONTACTTYPE: 'CONTACTTYPE',
  PAYMENTTERMS: 'PAYMENTTERMS',
  CURRENCY: 'CURRENCY',
  OUTSTANDING: 'OUTSTANDING',
  UNUSEDCREDIT: 'UNUSEDCREDIT',
  SOURCESYSTEM: 'SOURCESYSTEM',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP',
  LASTMODIFIEDTIME: 'LASTMODIFIEDTIME',
  tag: 'tag'
};

exports.Prisma.ZohoContactsLineItemInfoScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  CONTACTID: 'CONTACTID',
  GSTIN: 'GSTIN',
  PAN: 'PAN'
};

exports.Prisma.ZohoItemsMasterScalarFieldEnum = {
  lid: 'lid',
  batchNo: 'batchNo',
  addedTime: 'addedTime',
  addedUser: 'addedUser',
  modifiedTime: 'modifiedTime',
  modifiedUser: 'modifiedUser',
  companyName: 'companyName',
  companyId: 'companyId',
  ITEMID: 'ITEMID',
  ITEMNAME: 'ITEMNAME',
  DESCRIPTION: 'DESCRIPTION',
  RATE: 'RATE',
  UNIT: 'UNIT',
  TAXPERCENT: 'TAXPERCENT',
  SKU: 'SKU',
  PRODUCTTYPE: 'PRODUCTTYPE'
};

exports.Prisma.CustomerPaymentsMirrorScalarFieldEnum = {
  lid: 'lid',
  payment_id: 'payment_id',
  invoice_number: 'invoice_number',
  payment_mode: 'payment_mode',
  date: 'date',
  amount: 'amount',
  amount_refunded: 'amount_refunded',
  bank_charges: 'bank_charges',
  status: 'status',
  reference_number: 'reference_number',
  description: 'description',
  customer_id: 'customer_id',
  customer_name: 'customer_name',
  invoice_id: 'invoice_id',
  invoice_amount: 'invoice_amount',
  amount_applied: 'amount_applied',
  balance_amount: 'balance_amount',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  synctimestamp: 'synctimestamp',
  invoice_date: 'invoice_date'
};

exports.Prisma.Gstr2b_cdnrScalarFieldEnum = {
  lid: 'lid',
  notedate: 'notedate',
  notetype: 'notetype',
  notesupplytype: 'notesupplytype',
  notevalue: 'notevalue',
  notenumber: 'notenumber',
  tradename: 'tradename',
  suppliergstin: 'suppliergstin',
  sgst: 'sgst',
  igst: 'igst',
  cgst: 'cgst',
  cess: 'cess',
  srctype: 'srctype',
  revcharge: 'revcharge',
  itcavl: 'itcavl',
  reason: 'reason',
  supplyperiod: 'supplyperiod',
  supplyfilingdate: 'supplyfilingdate',
  rate: 'rate',
  taxablevalue: 'taxablevalue',
  irn: 'irn',
  irngendate: 'irngendate',
  placeofsupply: 'placeofsupply',
  companygstin: 'companygstin',
  companyname: 'companyname',
  companyid: 'companyid',
  gstr2bMonth: 'gstr2bMonth',
  gstr2bYear: 'gstr2bYear',
  syncdatetime: 'syncdatetime'
};

exports.Prisma.Gstr2b_impgScalarFieldEnum = {
  lid: 'lid',
  referencedate: 'referencedate',
  billentrydate: 'billentrydate',
  portcode: 'portcode',
  billnumber: 'billnumber',
  igst: 'igst',
  cess: 'cess',
  taxablevalue: 'taxablevalue',
  isamended: 'isamended',
  companygstin: 'companygstin',
  companyname: 'companyname',
  companyid: 'companyid',
  gstr2bMonth: 'gstr2bMonth',
  gstr2bYear: 'gstr2bYear',
  syncdatetime: 'syncdatetime'
};

exports.Prisma.Gstr2b_impgsezScalarFieldEnum = {
  lid: 'lid',
  referencedate: 'referencedate',
  billentrydate: 'billentrydate',
  portcode: 'portcode',
  billnumber: 'billnumber',
  tradename: 'tradename',
  suppliergstin: 'suppliergstin',
  igst: 'igst',
  cess: 'cess',
  taxablevalue: 'taxablevalue',
  isamended: 'isamended',
  companygstin: 'companygstin',
  companyname: 'companyname',
  companyid: 'companyid',
  gstr2bMonth: 'gstr2bMonth',
  gstr2bYear: 'gstr2bYear',
  syncdatetime: 'syncdatetime'
};

exports.Prisma.Gstr2baScalarFieldEnum = {
  lid: 'lid',
  invoicedate: 'invoicedate',
  originvoicedate: 'originvoicedate',
  invoicevalue: 'invoicevalue',
  invoicenumber: 'invoicenumber',
  originvoicenumber: 'originvoicenumber',
  tradename: 'tradename',
  suppliergstin: 'suppliergstin',
  sgst: 'sgst',
  igst: 'igst',
  cgst: 'cgst',
  cess: 'cess',
  type: 'type',
  revcharge: 'revcharge',
  itcavl: 'itcavl',
  reason: 'reason',
  supplyperiod: 'supplyperiod',
  supplyfilingdate: 'supplyfilingdate',
  placeofsupply: 'placeofsupply',
  companygstin: 'companygstin',
  companyname: 'companyname',
  companyid: 'companyid',
  gstr2bMonth: 'gstr2bMonth',
  gstr2bYear: 'gstr2bYear',
  syncdatetime: 'syncdatetime',
  taxablevalue: 'taxablevalue',
  rate: 'rate'
};

exports.Prisma.NoticeTrackerScalarFieldEnum = {
  LID: 'LID',
  companyid: 'companyid',
  addedUser: 'addedUser',
  addedTime: 'addedTime',
  modifiedUser: 'modifiedUser',
  modifiedTime: 'modifiedTime',
  GSTIN: 'GSTIN',
  Entity: 'Entity',
  Type_of_Notice: 'Type_of_Notice',
  SCN_Ref_no: 'SCN_Ref_no',
  DOI: 'DOI',
  Section: 'Section',
  FY: 'FY',
  Time_Extension_Filed: 'Time_Extension_Filed',
  Due_Date: 'Due_Date',
  notice_IGSTtax: 'notice_IGSTtax',
  notice_CGSTtax: 'notice_CGSTtax',
  notice_SGSTtax: 'notice_SGSTtax',
  notice_Cesstax: 'notice_Cesstax',
  notice_Total_Tax: 'notice_Total_Tax',
  notice_IGSTInterest: 'notice_IGSTInterest',
  notice_CGSTInterest: 'notice_CGSTInterest',
  notice_SGSTInterest: 'notice_SGSTInterest',
  notice_CessInterest: 'notice_CessInterest',
  notice_Total_Interest: 'notice_Total_Interest',
  notice_IGSTPenalty: 'notice_IGSTPenalty',
  notice_CGSTPenalty: 'notice_CGSTPenalty',
  notice_SGSTPenalty: 'notice_SGSTPenalty',
  notice_CessPenalty: 'notice_CessPenalty',
  notice_Total_Penalty: 'notice_Total_Penalty',
  notice_IGSTLatefee: 'notice_IGSTLatefee',
  notice_CGSTLatefee: 'notice_CGSTLatefee',
  notice_SGSTLatefee: 'notice_SGSTLatefee',
  notice_CessLatefee: 'notice_CessLatefee',
  notice_Total_Late_fee: 'notice_Total_Late_fee',
  notice_Total_Notice_Amount: 'notice_Total_Notice_Amount',
  Remarks: 'Remarks',
  notice_remarks: 'notice_remarks',
  order_Ref_No: 'order_Ref_No',
  order_Date: 'order_Date',
  order_IGSTtax: 'order_IGSTtax',
  order_CGSTtax: 'order_CGSTtax',
  order_SGSTtax: 'order_SGSTtax',
  order_Cesstax: 'order_Cesstax',
  order_Total_Tax: 'order_Total_Tax',
  order_IGSTInterest: 'order_IGSTInterest',
  order_CGSTInterest: 'order_CGSTInterest',
  order_SGSTInterest: 'order_SGSTInterest',
  order_CessInterest: 'order_CessInterest',
  order_Total_Interest: 'order_Total_Interest',
  order_IGSTPenalty: 'order_IGSTPenalty',
  order_CGSTPenalty: 'order_CGSTPenalty',
  order_SGSTPenalty: 'order_SGSTPenalty',
  order_CessPenalty: 'order_CessPenalty',
  order_Total_Penalty: 'order_Total_Penalty',
  order_IGSTLatefee: 'order_IGSTLatefee',
  order_CGSTLatefee: 'order_CGSTLatefee',
  order_SGSTLatefee: 'order_SGSTLatefee',
  order_CessLatefee: 'order_CessLatefee',
  order_Total_Late_fee: 'order_Total_Late_fee',
  order_Total_Notice_Amount: 'order_Total_Notice_Amount',
  order_Total_Demand_amount: 'order_Total_Demand_amount',
  order_Total_drop_amount: 'order_Total_drop_amount',
  order_Remarks: 'order_Remarks',
  Category: 'Category',
  Status: 'Status',
  Manager_responsible: 'Manager_responsible',
  Personresp_1: 'Personresp_1',
  Personresp_2: 'Personresp_2',
  Personresp_3: 'Personresp_3',
  contractid: 'contractid',
  Projectids: 'Projectids',
  totalDemandAmount: 'totalDemandAmount',
  totalDropAmount: 'totalDropAmount'
};

exports.Prisma.Portal_clientsScalarFieldEnum = {
  id: 'id',
  zohoContactId: 'zohoContactId',
  isCredit: 'isCredit',
  paymentStatus: 'paymentStatus',
  paymentId: 'paymentId',
  createdBy: 'createdBy',
  modifiedBy: 'modifiedBy',
  createdOn: 'createdOn',
  modifiedOn: 'modifiedOn'
};

exports.Prisma.Portal_service_userDocsScalarFieldEnum = {
  id: 'id',
  link_userId: 'link_userId',
  link_docId: 'link_docId',
  link_projectId: 'link_projectId',
  blob: 'blob',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Portal_serviceCriteriaScalarFieldEnum = {
  id: 'id',
  companyid: 'companyid',
  link_assignmentId: 'link_assignmentId',
  serviceName: 'serviceName',
  price: 'price',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Portal_serviceCriteriaDocs_CMSScalarFieldEnum = {
  id: 'id',
  companyid: 'companyid',
  link_criteriaId: 'link_criteriaId',
  document: 'document',
  type: 'type',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Portal_serviceDocs_CMSScalarFieldEnum = {
  id: 'id',
  link_id: 'link_id',
  document: 'document',
  type: 'type',
  category: 'category',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Portal_serviceOrderScalarFieldEnum = {
  id: 'id',
  link_clientId: 'link_clientId',
  link_serviceId: 'link_serviceId',
  price: 'price',
  addedtime: 'addedtime',
  addeduser: 'addeduser',
  modifieduser: 'modifieduser',
  modifiedtime: 'modifiedtime'
};

exports.Prisma.Portal_usersPivotScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  client_id: 'client_id'
};

exports.Prisma.Temp_bots_summaryScalarFieldEnum = {
  id: 'id',
  reco_id: 'reco_id',
  summary: 'summary'
};

exports.Prisma.VendorcreditsmirrorScalarFieldEnum = {
  lid: 'lid',
  vendor_credit_id: 'vendor_credit_id',
  vendor_credit_number: 'vendor_credit_number',
  date: 'date',
  status: 'status',
  current_sub_status_id: 'current_sub_status_id',
  current_sub_status: 'current_sub_status',
  reference_number: 'reference_number',
  vendor_id: 'vendor_id',
  vendor_name: 'vendor_name',
  currency_id: 'currency_id',
  currency_code: 'currency_code',
  exchange_rate: 'exchange_rate',
  source_of_supply: 'source_of_supply',
  destination_of_supply: 'destination_of_supply',
  gst_no: 'gst_no',
  bill_id: 'bill_id',
  bill_number: 'bill_number',
  line_item_id: 'line_item_id',
  account_id: 'account_id',
  account_name: 'account_name',
  discount: 'discount',
  description: 'description',
  itc_eligibility: 'itc_eligibility',
  tax_id: 'tax_id',
  tax_name: 'tax_name',
  tax_percentage: 'tax_percentage',
  igst: 'igst',
  cgst: 'cgst',
  sgst: 'sgst',
  total: 'total',
  addedtime: 'addedtime',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  tag: 'tag',
  synctimestamp: 'synctimestamp',
  itc_availability: 'itc_availability'
};

exports.Prisma.VendorpaymentsMirrorScalarFieldEnum = {
  lid: 'lid',
  payment_id: 'payment_id',
  payment_number: 'payment_number',
  status: 'status',
  vendor_id: 'vendor_id',
  vendor_name: 'vendor_name',
  payment_mode: 'payment_mode',
  currency_id: 'currency_id',
  currency_code: 'currency_code',
  date: 'date',
  description: 'description',
  reference_number: 'reference_number',
  exchange_rate: 'exchange_rate',
  tax_account_id: 'tax_account_id',
  tax_account_name: 'tax_account_name',
  tax_amount_withheld: 'tax_amount_withheld',
  amount: 'amount',
  total_payment_amount: 'total_payment_amount',
  destination_of_supply: 'destination_of_supply',
  source_of_supply: 'source_of_supply',
  bcy_amount: 'bcy_amount',
  paid_through_account_id: 'paid_through_account_id',
  paid_through_account_name: 'paid_through_account_name',
  balance: 'balance',
  bill_id: 'bill_id',
  amount_applied: 'amount_applied',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  synctimestamp: 'synctimestamp'
};

exports.Prisma.ZohocreditnotesScalarFieldEnum = {
  lid: 'lid',
  creditnote_id: 'creditnote_id',
  creditnote_number: 'creditnote_number',
  date: 'date',
  status: 'status',
  reference_number: 'reference_number',
  total: 'total',
  balance: 'balance',
  exchange_rate: 'exchange_rate',
  customer_id: 'customer_id',
  customer_name: 'customer_name',
  currency_id: 'currency_id',
  currency_code: 'currency_code',
  applied_invoices: 'applied_invoices',
  addedtime: 'addedtime',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  tag: 'tag',
  synctimestamp: 'synctimestamp'
};

exports.Prisma.ZohocustomerpaymentsScalarFieldEnum = {
  lid: 'lid',
  payment_id: 'payment_id',
  payment_number: 'payment_number',
  invoice_number: 'invoice_number',
  payment_mode: 'payment_mode',
  date: 'date',
  amount: 'amount',
  bcy_amount: 'bcy_amount',
  location_id: 'location_id',
  location_name: 'location_name',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  synctimestamp: 'synctimestamp',
  tag: 'tag',
  childUpdated: 'childUpdated'
};

exports.Prisma.ZohoexpenseScalarFieldEnum = {
  lid: 'lid',
  expenseid: 'expenseid',
  date: 'date',
  accountname: 'accountname',
  description: 'description',
  currencycode: 'currencycode',
  customername: 'customername',
  customerid: 'customerid',
  total: 'total',
  bcy_total: 'bcy_total',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  synctimestamp: 'synctimestamp',
  tag: 'tag',
  childUpdated: 'childUpdated'
};

exports.Prisma.ZohojournalsScalarFieldEnum = {
  lid: 'lid',
  journal_id: 'journal_id',
  journal_date: 'journal_date',
  reference_number: 'reference_number',
  currency_id: 'currency_id',
  notes: 'notes',
  journal_type: 'journal_type',
  entity_type: 'entity_type',
  total: 'total',
  bcy_total: 'bcy_total',
  companyname: 'companyname',
  companyid: 'companyid',
  last_modified: 'last_modified',
  syncdatetime: 'syncdatetime',
  tag: 'tag',
  childupdated: 'childupdated',
  entry_number: 'entry_number',
  SYNCTIMESTAMP: 'SYNCTIMESTAMP'
};

exports.Prisma.ZohovendorcreditsScalarFieldEnum = {
  lid: 'lid',
  vendor_credit_id: 'vendor_credit_id',
  vendor_credit_number: 'vendor_credit_number',
  status: 'status',
  current_sub_status_id: 'current_sub_status_id',
  current_sub_status: 'current_sub_status',
  date: 'date',
  total: 'total',
  balance: 'balance',
  reference_number: 'reference_number',
  vendor_id: 'vendor_id',
  vendor_name: 'vendor_name',
  currency_id: 'currency_id',
  currency_code: 'currency_code',
  addedtime: 'addedtime',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  tag: 'tag',
  synctimestamp: 'synctimestamp'
};

exports.Prisma.ZohovendorpaymentsScalarFieldEnum = {
  lid: 'lid',
  payment_id: 'payment_id',
  payment_number: 'payment_number',
  bill_numbers: 'bill_numbers',
  vendor_id: 'vendor_id',
  vendor_name: 'vendor_name',
  payment_mode: 'payment_mode',
  currency_id: 'currency_id',
  currency_code: 'currency_code',
  date: 'date',
  description: 'description',
  reference_number: 'reference_number',
  exchange_rate: 'exchange_rate',
  amount: 'amount',
  bcy_amount: 'bcy_amount',
  paid_through_account_id: 'paid_through_account_id',
  paid_through_account_name: 'paid_through_account_name',
  balance: 'balance',
  bcy_balance: 'bcy_balance',
  companyname: 'companyname',
  companyid: 'companyid',
  lastmodified: 'lastmodified',
  synctimestamp: 'synctimestamp',
  tag: 'tag',
  childUpdated: 'childUpdated',
  status: 'status'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  academyCartTable: 'academyCartTable',
  academyCateoryTable: 'academyCateoryTable',
  academyContact: 'academyContact',
  academyCounselling: 'academyCounselling',
  academyCounsellor: 'academyCounsellor',
  academyEvent: 'academyEvent',
  academyTutor: 'academyTutor',
  academyWishlist: 'academyWishlist',
  accountingPolicy: 'accountingPolicy',
  adjustment_tb: 'adjustment_tb',
  allApps: 'allApps',
  allArguments: 'allArguments',
  ALLBUGS: 'ALLBUGS',
  ALLCONTRACTS_FT_TEST: 'ALLCONTRACTS_FT_TEST',
  AllDepartments: 'AllDepartments',
  allDimensions: 'allDimensions',
  AllEmployees: 'AllEmployees',
  allFields: 'allFields',
  AllFiles: 'AllFiles',
  allForms: 'allForms',
  AllInvoices: 'AllInvoices',
  allLeaves: 'allLeaves',
  allModules: 'allModules',
  allModuleTransactions: 'allModuleTransactions',
  allOptions: 'allOptions',
  AllProjects: 'AllProjects',
  allPythonFunctions: 'allPythonFunctions',
  allWorkflows: 'allWorkflows',
  appAssets_form: 'appAssets_form',
  appAssets_head: 'appAssets_head',
  appAssets_report: 'appAssets_report',
  appAssets_subHead: 'appAssets_subHead',
  AR_Collections: 'AR_Collections',
  AR_Manual: 'AR_Manual',
  AR_ReminderSettings: 'AR_ReminderSettings',
  AssignmentNature: 'AssignmentNature',
  ATHMABILLS: 'ATHMABILLS',
  ATHMASETTLEMENT: 'ATHMASETTLEMENT',
  auditDocs: 'auditDocs',
  AuditorsInfoTable: 'AuditorsInfoTable',
  bankDetails: 'bankDetails',
  bankMaster: 'bankMaster',
  bankTransactions: 'bankTransactions',
  baseTable: 'baseTable',
  botDesignsGlobal: 'botDesignsGlobal',
  botTransactions: 'botTransactions',
  branchLocation: 'branchLocation',
  branchMaster: 'branchMaster',
  calender: 'calender',
  Categories: 'Categories',
  chartReport: 'chartReport',
  client_Group: 'client_Group',
  clientGroup: 'clientGroup',
  clockTimer: 'clockTimer',
  coa_definition: 'coa_definition',
  commitments: 'commitments',
  companyAcBkMaster: 'companyAcBkMaster',
  companyMaster: 'companyMaster',
  CompanyReportMaster: 'CompanyReportMaster',
  contactMaster: 'contactMaster',
  CONTRACTASSIGNMENTNATURE_FT_TEST: 'CONTRACTASSIGNMENTNATURE_FT_TEST',
  countryMaster: 'countryMaster',
  courseMaster: 'courseMaster',
  courseVideoMaster: 'courseVideoMaster',
  creditcard: 'creditcard',
  dcr: 'dcr',
  definitionsTable: 'definitionsTable',
  documentation: 'documentation',
  dropdownMaster: 'dropdownMaster',
  DynamicTable: 'DynamicTable',
  Entries: 'Entries',
  excelDocumentsUpload: 'excelDocumentsUpload',
  extDocsMaster: 'extDocsMaster',
  extDocsSpecific: 'extDocsSpecific',
  faClassification: 'faClassification',
  faReg: 'faReg',
  faRegister: 'faRegister',
  Finance: 'Finance',
  FinanceBS: 'FinanceBS',
  financial_templateMaster: 'financial_templateMaster',
  FinancialSheet: 'FinancialSheet',
  followupLog: 'followupLog',
  formName: 'formName',
  ggshCoa: 'ggshCoa',
  GLOBALFORMS: 'GLOBALFORMS',
  globalModules: 'globalModules',
  GlobalReportMaster: 'GlobalReportMaster',
  goalSetting: 'goalSetting',
  gstinMaster: 'gstinMaster',
  gstr1B2b: 'gstr1B2b',
  GSTR1B2CS: 'GSTR1B2CS',
  gstr2b: 'gstr2b',
  interview: 'interview',
  INVITEDUSERS: 'INVITEDUSERS',
  invoice_outstanding: 'invoice_outstanding',
  itcLedger: 'itcLedger',
  jk: 'jk',
  landingLogin: 'landingLogin',
  leadwf: 'leadwf',
  leaveManagement: 'leaveManagement',
  leaveRequest: 'leaveRequest',
  mailTemplates: 'mailTemplates',
  marks: 'marks',
  Milestones: 'Milestones',
  MILESTONESUBFORM_FT_TEST: 'MILESTONESUBFORM_FT_TEST',
  newTest: 'newTest',
  newTestDemo: 'newTestDemo',
  observations: 'observations',
  pagebuilder_form: 'pagebuilder_form',
  PARENTFORMTEMPLATE: 'PARENTFORMTEMPLATE',
  pettyTask: 'pettyTask',
  planTable: 'planTable',
  proposal_editLog: 'proposal_editLog',
  proposal_templateTransactions: 'proposal_templateTransactions',
  proposalBlob: 'proposalBlob',
  pytForex: 'pytForex',
  questionTemplate: 'questionTemplate',
  questionTransaction: 'questionTransaction',
  Raw_ContactMaster: 'Raw_ContactMaster',
  reportsList: 'reportsList',
  requirements: 'requirements',
  sample: 'sample',
  sample1: 'sample1',
  scheduleDemo: 'scheduleDemo',
  segmentMaster: 'segmentMaster',
  sepTest: 'sepTest',
  SOPTable: 'SOPTable',
  specificMailTemplates: 'specificMailTemplates',
  specificModules: 'specificModules',
  speedDocuments: 'speedDocuments',
  speedDrive: 'speedDrive',
  sqlTableMaster: 'sqlTableMaster',
  stages: 'stages',
  statutory: 'statutory',
  SubCategories: 'SubCategories',
  subEntries: 'subEntries',
  SUBFORMTEMPLATE1: 'SUBFORMTEMPLATE1',
  SUBFORMTEMPLATE2: 'SUBFORMTEMPLATE2',
  SUBFORMTEMPLATE3: 'SUBFORMTEMPLATE3',
  subscriptionTable: 'subscriptionTable',
  SYF_ALLOBSERVATIONS: 'SYF_ALLOBSERVATIONS',
  SYF_BRANCHMASTER: 'SYF_BRANCHMASTER',
  SYF_COMPANYACBKMASTER: 'SYF_COMPANYACBKMASTER',
  SYF_COMPANYMASTER: 'SYF_COMPANYMASTER',
  SYF_GLOBALTEMPLATES: 'SYF_GLOBALTEMPLATES',
  SYF_GSTMASTER: 'SYF_GSTMASTER',
  SYF_LEADS: 'SYF_LEADS',
  SYF_MODULEMASTER: 'SYF_MODULEMASTER',
  SYF_PLANMASTER: 'SYF_PLANMASTER',
  syf_reco: 'syf_reco',
  SYF_SPEEDDRIVEMASTERS: 'SYF_SPEEDDRIVEMASTERS',
  SYF_SPEEDMASTERS: 'SYF_SPEEDMASTERS',
  SYF_TANMASTER: 'SYF_TANMASTER',
  SYF_USERMASTER: 'SYF_USERMASTER',
  sysdiagrams: 'sysdiagrams',
  tagMaster: 'tagMaster',
  TagsMaster: 'TagsMaster',
  tally_vouchertype_py: 'tally_vouchertype_py',
  tanMaster: 'tanMaster',
  tbCoaMapping: 'tbCoaMapping',
  TBL_AH_OPBillMetadata: 'TBL_AH_OPBillMetadata',
  TBL_AH_OPBillRangeOfDate: 'TBL_AH_OPBillRangeOfDate',
  tbl_FAQ_Admin: 'tbl_FAQ_Admin',
  tbl_FAQ_Admindata: 'tbl_FAQ_Admindata',
  tbl_FAQ_Master: 'tbl_FAQ_Master',
  tbl_tallyprime_LedgerMasters: 'tbl_tallyprime_LedgerMasters',
  tbl_workflows_bills: 'tbl_workflows_bills',
  tbl_workflows_grn: 'tbl_workflows_grn',
  tbl_workflows_grnitems: 'tbl_workflows_grnitems',
  tbl_workflows_purchaseorder: 'tbl_workflows_purchaseorder',
  tbl_workflows_purchaseorderitem: 'tbl_workflows_purchaseorderitem',
  tbl_ZohoConnectorRegistrations: 'tbl_ZohoConnectorRegistrations',
  tblUserDetails: 'tblUserDetails',
  tdsInvoices: 'tdsInvoices',
  tdsMaster: 'tdsMaster',
  temp: 'temp',
  templateBuilder: 'templateBuilder',
  templateHeadings: 'templateHeadings',
  templateList: 'templateList',
  templateMaster: 'templateMaster',
  test: 'test',
  test_2: 'test_2',
  test1: 'test1',
  test12: 'test12',
  test2: 'test2',
  test3: 'test3',
  test4: 'test4',
  test5: 'test5',
  testing123: 'testing123',
  testing25: 'testing25',
  testJuly: 'testJuly',
  testTable: 'testTable',
  trackGstReturns: 'trackGstReturns',
  transactionQuestion: 'transactionQuestion',
  transactionReportMaster: 'transactionReportMaster',
  trialBalanceVersion: 'trialBalanceVersion',
  trialtest24: 'trialtest24',
  trialTesting: 'trialTesting',
  tzm_costCenters: 'tzm_costCenters',
  user_1: 'user_1',
  user_master: 'user_master',
  user1: 'user1',
  userBotMaster: 'userBotMaster',
  userDetail: 'userDetail',
  userEntityMaster: 'userEntityMaster',
  userMaster: 'userMaster',
  vendorMasterTemp: 'vendorMasterTemp',
  vendorNatureMaster: 'vendorNatureMaster',
  window_verifiedEmail: 'window_verifiedEmail',
  workflows: 'workflows',
  zohoAllVouchers: 'zohoAllVouchers',
  ZohoBills: 'ZohoBills',
  zohoContacts: 'zohoContacts',
  zohoContactsLineItemInfo: 'zohoContactsLineItemInfo',
  zohoItemsMaster: 'zohoItemsMaster',
  customerPaymentsMirror: 'customerPaymentsMirror',
  gstr2b_cdnr: 'gstr2b_cdnr',
  gstr2b_impg: 'gstr2b_impg',
  gstr2b_impgsez: 'gstr2b_impgsez',
  gstr2ba: 'gstr2ba',
  noticeTracker: 'noticeTracker',
  portal_clients: 'portal_clients',
  portal_service_userDocs: 'portal_service_userDocs',
  portal_serviceCriteria: 'portal_serviceCriteria',
  portal_serviceCriteriaDocs_CMS: 'portal_serviceCriteriaDocs_CMS',
  portal_serviceDocs_CMS: 'portal_serviceDocs_CMS',
  portal_serviceOrder: 'portal_serviceOrder',
  portal_usersPivot: 'portal_usersPivot',
  temp_bots_summary: 'temp_bots_summary',
  vendorcreditsmirror: 'vendorcreditsmirror',
  vendorpaymentsMirror: 'vendorpaymentsMirror',
  zohocreditnotes: 'zohocreditnotes',
  zohocustomerpayments: 'zohocustomerpayments',
  zohoexpense: 'zohoexpense',
  zohojournals: 'zohojournals',
  zohovendorcredits: 'zohovendorcredits',
  zohovendorpayments: 'zohovendorpayments'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
